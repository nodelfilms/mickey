{"version":3,"sources":["Avatar.js","Alert.js","server_api.js","Login.js","Navbar.js","ProjectWithFolders.js","ProjectsList.js","FileDropzone.js","File.js","TimeLeft.js","FolderStats.js","Breadcrumbs.js","Folder.js","User.js","NewProject.js","Project.js","index.js","App.js"],"names":["Avatar","props","url","crypto","createHash","update","email","trim","toLocaleLowerCase","digest","size","undefined","cls","className","react_default","a","createElement","src","height","alt","errorHandler","setAlert","msg","console","log","Alert","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errormsg","setMsg","bind","assertThisInitialized","setState","role","Component","server_URL","test","window","location","origin","fetchStatusCheck","response","status","json","Promise","reject","statusText","onError","text","message","server_api","getProjectsList","func","fetch","method","headers","content-type","Authorization","getToken","then","catch","getProject","proj_id","addProject","name","description","body","JSON","stringify","updateProject","id","deleteProject","addFolder","project_id","folder_name","project","deleteFolder","folder_id","getFolder","getUsersList","addUser","updateUserProjects","user_id","action","updateUserName","getMe","getUser","deleteUser","getVersion","updateServer","uploadFile","file","onProgress","onDone","req","XMLHttpRequest","responseType","upload","addEventListener","event","lengthComputable","loaded","total","onload","resonse","formData","FormData","append","open","setRequestHeader","send","fileDownloadURL","file_id","token","accessToken","idToken","me","expiresAt","LOGIN_URL","pathname","CLIENT_ID","auth","auth0","WebAuth","domain","clientID","redirectUri","scope","loggedIn","authResult","expiresIn","Date","getTime","localStorage","setItem","isAuthenticated","checkSession","err","Login","_Component","logged_in","restoring_session","return_to","inputEmail","inputCode","wrong_email","code_sent","from","was_logged_before","getItem","removeItem","API","match","params","hash","parseHash","handleInputChange","performLogIn","inherits","createClass","key","value","_this$setState","target","defineProperty","_this2","passwordlessStart","connection","res","passwordlessLogin","verificationCode","preventDefault","no_user","react_router","to","onSubmit","width","type","placeholder","onChange","autoFocus","href","onClick","authorize","Logout","logout","returnTo","MenuItem","where","react_router_dom","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","render","p","is_admin","formatter","buildFormatter","ruStrings","Folder","empty","files_num","icon","animated","animate","lib_default","date","updated","callback","NewFolder","autoComplete","onAdd","htmlFor","maxLength","onEdit","length","disabled","onCancel","ProjectName","new_folder","ProjectWithFolders","new_folder_name","onNewFolder","onButtonCancel","onButtonAdd","onButtonDelete","folderAdded","folderDeleted","folder","folders","i","splice","unshift","push","sorted","sort","b","FoldersArray","f","ProjectsList","projects","loading","map","prj","src_ProjectWithFolders_0","FileDropzone","hightlight","fileInputRef","React","createRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","current","click","evt","files","array","item","dataTransfer","children","style","cursor","ref","multiple","File","queued","index","FileQueued","uploading","progress","Math","round","FileUploading","error","error_text","FileError","download","saveRef","filesize","uploaded","user","FileNormal","Seconds","x","Minutes","FolderStats","stats","uploaded_so_far","percentage","time_left","uploading_now","total_to_upload","toFixed","upload_started","linkrefs","setTimeout","zip_token","mseq","fsecs","fhours","fmins","hours","floor","mins","secs","TimeLeft","total_uploaded","Breadcrumbs","parent_id","parent_name","aria-current","onCancelFile","onFileUpoaded","onUploadProgress","onUploadError","onFileListLoaded","new_files","added_size","duplicate","j","old_state","concat","rollQueue","uploads","next","to_upload","abort","copy","FileDropzone_FileDropzone","UserDescription","editing","projs","project_names","is_loaded","is_deleting","clb","onEditNameButton","onNameChangeButton","nameEdit","onCancelButton","onDeleteUser","ServerStatus","updates","uptime_starts","current_hash","current_name","current_date","User","is_deleted","version_info","cached_id","onUpdateServer","json2","loadUserInfo","_this3","updateMe","_this4","_this5","NewProject","processing","processed","onCreate","onCreated","required","rows","NewUser","email_valid","e","m","emailIsValid","user_email","onNewUserButton","onCreateUserButton","user_name","ProjectDescription","folders_num","onEditDescButton","onDescChangeButton","descEdit","created","onDeleteProject","Project","participants","Set","users","moved_user","onAddUser","onProjectLoaded","onUserCreated","newstate","sel","add","delete","new_users","others","has","Project_User","ReactDOM","exact","path","component","Projects","Folder_Folder","Project_Project","User_User","Alert_Alert","document","getElementById"],"mappings":"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","file":"static/js/main.df35e797.chunk.js","sourcesContent":["import React    from 'react';\r\nimport crypto   from 'crypto';\r\n\r\nexport default function Avatar(props) {\r\n    const md5 = crypto.createHash('md5').update(props.email.trim().toLocaleLowerCase()).digest('hex');\r\n    const url = 'https://www.gravatar.com/avatar/' + md5  + '?d=identicon';\r\n    const size = ( props.size === undefined ) ? '30px' : props.size+'px';\r\n    const cls = props.className || '';\r\n    return (<img src={url} height={size} alt='avatar' className={'rounded-circle '+cls} />);\r\n} ","import React, { Component } from 'react';\r\n\r\n// пока пустой указатель, инициализируем позже, когда создатся экземпляр реакт-класса\r\nlet errorHandler = null;\r\n\r\n// Обновляем состояние баннера на новый текст ошибки\r\nexport function setAlert (msg){\r\n    if (errorHandler === null)\r\n    {\r\n        if( msg !== null )\r\n            return console.log(\"Error: setAlert() called before instantiating <Alert />, ignored. Message: \", msg);\r\n        else\r\n            return;\r\n    }\r\n    errorHandler(msg);\r\n}\r\n\r\n// класс показывает баннер с ошибкой, если она установлена не в null\r\nexport default class Alert extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = { errormsg: null };\r\n\r\n        if ( errorHandler !== null )\r\n            console.log(\"Warning: there can be only one instance of <Alert /> in application.\");\r\n        errorHandler = this.setMsg.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        errorHandler = null;\r\n    }    \r\n\r\n    setMsg(msg) {\r\n        this.setState({ errormsg: msg });\r\n    }\r\n\r\n    render () {\r\n        if (this.state.errormsg === null)\r\n            return ('');\r\n        else\r\n            return (<aside className=\"fixed-bottom bg-danger border border-white text-white p-2\" role=\"alert\"> {this.state.errormsg} </aside>);\r\n    }\r\n}\r\n","import { setAlert } from './Alert';\r\nimport { getToken } from './Login';\r\n\r\n// автоматически определяем куда коннектится в зависимости от того, \r\n// в проде мы или на локальной машине\r\nconst server_URL = /localhost/.test(window.location.origin) ? \r\n                        'http://localhost:8000' :  // сервер на локальной машине\r\n                        'https://tomater.synology.me:8000'; // NAS, опубликованный в интернет\r\n\r\n\r\n// стандартная функция обработки статуса ответа сервера\r\nfunction fetchStatusCheck(response){\r\n    switch (response.status) {\r\n        case 200:\r\n            return (response.json());\r\n        case 401:\r\n            // проблема с токеном аутентификации - надо идти снова к странице логина\r\n            return Promise.reject(\"Error 401: Token is not correct.\");\r\n        default:\r\n            return Promise.reject('Server reply: '+ response.status + '; ' + response.statusText);\r\n    }\r\n}\r\n\r\nfunction onError (msg){\r\n    let text = \"Server-api/onError: unknown type of error...\";\r\n    if (typeof msg == 'object')\r\n    {\r\n        console.log(msg); // TODO.. Remove?\r\n        text = msg.message; // ошибка от fetch?\r\n    }\r\n    else if (typeof msg == 'string'){\r\n      text = msg;\r\n    }\r\n    setAlert(text);\r\n}\r\n\r\nexport default {\r\n    // получение списка проектов с сервера\r\n    getProjectsList: (func) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/projects\", {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // получение описания проекта с сервера\r\n    getProject: (func, proj_id) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/projects/\" + proj_id, {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // добавить новый проект\r\n    // {\r\n    //    name:        string,  // название нового проекта, до 50 символов. Не может быть пустым\r\n    //    description: string   // описание новго проектаб до 200 символов. Допускается пустое\r\n    // }\r\n    // Возвращает описание проекта\r\n    addProject: (func, name, description) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/projects\", {\r\n            method: 'post',\r\n            body: JSON.stringify({ name, description }),\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // обновить описание проекта\r\n    // {\r\n    //    name:        string,  // новое название проекта, до 50 символов. Не может быть пустым\r\n    //    description: string   // новое описание проектаб до 200 символов. Допускается пустое\r\n    // }\r\n    // Возвращает описание проекта\r\n    updateProject: (func, id, name, description) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/projects/\" + id, {\r\n            method: 'put',\r\n            body: JSON.stringify({ name, description }),\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // удалить проект\r\n    deleteProject: (func, id) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/projects/\" + id, {\r\n            method: 'delete',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },    \r\n\r\n    // добавить новый фолдер к проекту\r\n    // На входе JSON в теле\r\n    // {\r\n    //    project: string,  // UUID родительского проекта\r\n    //    name:    string   // название для новой папки\r\n    // }    \r\n    addFolder: (func, project_id, folder_name) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/folders\", {\r\n            method: 'post',\r\n            body: JSON.stringify({project: project_id, name: folder_name}),\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // удалить пустой фолдер \r\n    // На входе id\r\n    // На выходе тот же id, если все успешно\r\n    deleteFolder: (func, folder_id) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/folders/\"+folder_id, {\r\n            method: 'delete',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then( json => func(json.id) )\r\n        .catch(onError);\r\n    },\r\n\r\n    // считать папку с файлами\r\n    // На входе id\r\n    // На выходе JSON про папку и все ее файлы\r\n    getFolder: (func, folder_id) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/folders/\"+folder_id, {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // получить список всех пользователей\r\n    // На выходе JSON с массивом\r\n    getUsersList: (func) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users\", {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // Создать нового пользователя\r\n    // На входе JSON в теле\r\n    // {\r\n    //    name:    string   // имя пользователя (максимум 50 символов)\r\n    //    email:   string   // email (максимум 50 символов)\r\n    //    project: string   // uuid проекта, к которому даем права сразу\r\n    // }\r\n    // возвращает JSON c описанием нового пользователя\r\n    addUser: (func, name, email, project ) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users\", {\r\n            method: 'post',\r\n            body: JSON.stringify({name, email, project}),\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n\r\n    // обновление информации о пользователе - пока только доступные проекты\r\n    // позже, возможно, профиль\r\n    // На входе JSON в теле\r\n    // {\r\n    //    project: string               // uuid проекта, к которому даем/забираем права сразу\r\n    //    action:  string (add|delete)  // забрать или добавить прав\r\n    // }\r\n    // не возвращаем ничего\r\n    updateUserProjects: (func, user_id, project, action ) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users/\" + user_id, {\r\n            method: 'put',\r\n            body: JSON.stringify({project, action}),\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // обновление информации о пользователе - пока только доступные проекты\r\n    // позже, возможно, профиль\r\n    // На входе JSON в теле\r\n    // {\r\n    //    name: string               // имя, на которое заменяем старое (максимум 50 символов)\r\n    // }\r\n    // не возвращаем ничего\r\n    updateUserName: (func, user_id, name ) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users/\" + user_id, {\r\n            method: 'put',\r\n            body: JSON.stringify({name}),\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // получить информацию о текущем пользователе\r\n    getMe: (func) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users/me\", {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },\r\n\r\n    // получить информацию о текущем пользователе по ID\r\n    getUser: (func, user_id) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users/\" + user_id, {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },    \r\n\r\n    // удалить пользователя\r\n    deleteUser: (func, user_id) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/users/\" + user_id, {\r\n            method: 'delete',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },    \r\n\r\n    // получить информацию о текуцей версии приложения сервера\r\n    getVersion: (func) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/version\",  {\r\n            method: 'get',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },    \r\n\r\n    // перезапустить и обновить сервер\r\n    updateServer: (func) => {\r\n        setAlert(null);\r\n        return fetch(server_URL + \"/version\",  {\r\n            method: 'post',\r\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\r\n        .then(fetchStatusCheck)\r\n        .then(func)\r\n        .catch(onError);\r\n    },    \r\n\r\n    // загрузить файл на сервер\r\n    // на входе - \r\n    //  id родительской папочки\r\n    //  объект file\r\n    //     - коллбек для отслеживания прогресса загрузки\r\n    //     - колбек на окончание загрузки\r\n    //     - колбек на ошибку загрузки\r\n    //\r\n    //  возращает ссылку на риквест (чтобы отменить можно было)\r\n    uploadFile: (folder_id, file, onProgress, onDone, onError) => {\r\n        const req = new XMLHttpRequest();\r\n        req.responseType = 'json';\r\n\r\n        req.upload.addEventListener(\"progress\", event => {\r\n            if (event.lengthComputable)\r\n                onProgress(file.name, (event.loaded / event.total) * 100);\r\n        });\r\n        \r\n        req.onload = function () {\r\n            if ( req.resonse === null )\r\n                onError(file.name, \"Ошибка загрузки\" );\r\n            else\r\n                onDone(file.name, req.response); \r\n        }\r\n\r\n        req.upload.addEventListener(\"error\", event => {\r\n            // пока не удалось найти хоть какие-то признаки,\r\n            // позвояющие идентифицировать ошибку \r\n            // возможные причины - сервер не отвечает, это не файл, а папка, к файлу нет доступа\r\n            onError(file.name, \"Ошибка загрузки\" );\r\n        });\r\n    \r\n        const formData = new FormData();\r\n        formData.append(\"file\", file, file.name);\r\n        formData.append(\"folder\", folder_id);\r\n    \r\n        req.open(\"POST\", server_URL + \"/files\");\r\n        req.setRequestHeader('Authorization', 'Bearer ' + getToken() );\r\n        req.send(formData);\r\n\r\n        return req;\r\n    },\r\n\r\n    // правльная ссылка на скачивание файла\r\n    fileDownloadURL: (file_id, token) => {\r\n        return (server_URL + '/files/' + file_id + '?token=' + token);\r\n    }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\nimport { Redirect }         from \"react-router-dom\";\r\nimport auth0                from 'auth0-js';\r\nimport API                  from './server_api'\r\n\r\nimport './Login.css'\r\n\r\nlet accessToken = null;\r\nlet idToken     = null;\r\nlet me          = null;\r\nlet expiresAt   = 0;\r\n\r\nconst LOGIN_URL   = window.location.origin +  window.location.pathname;\r\nconst CLIENT_ID   = '7b4QizTZk0ptdfV5X3mcseQZJ0vLzJbB'; // API APP\r\nconst AUTH_DOMAIN = 'nodelfilms.eu.auth0.com';\r\n\r\nconst auth = new auth0.WebAuth({\r\n    domain:         AUTH_DOMAIN,\r\n    clientID:       CLIENT_ID,\r\n    redirectUri:    LOGIN_URL,\r\n    responseType:   'token id_token',\r\n    scope:          'openid profile email'\r\n});\r\n\r\nfunction loggedIn (authResult) {\r\n    // сохраняем данные из токена\r\n    expiresAt   = (authResult.expiresIn * 1000) + new Date().getTime();\r\n    accessToken = authResult.accessToken;\r\n    idToken     = authResult.idToken;\r\n    // Set isLoggedIn flag in localStorage\r\n    localStorage.setItem('isLoggedIn', 'true');\r\n}\r\n\r\nexport function getToken(){\r\n    return idToken;\r\n}\r\n\r\nexport function getMe(){\r\n    return me;\r\n}\r\n\r\nexport function updateMe(json){\r\n    me=json;\r\n}\r\n\r\nexport function isAuthenticated () {\r\n    if ( accessToken === null || me === null ) {\r\n        return false;\r\n    }\r\n    else {\r\n        const now = new Date().getTime();\r\n        // через 10 минут устареет? надо бы обновить. Обычно они на два часа выдаются\r\n        if ( now + 10*60*1000 >= expiresAt ) {\r\n            auth.checkSession({}, (err, authResult) => {\r\n                if (authResult && authResult.accessToken && authResult.idToken)\r\n                    loggedIn(authResult);\r\n            });\r\n        } \r\n        // пока считаем, что все норм, токен есть и он не очень старый, либо вот-вот обновится\r\n        return true;\r\n    }\r\n}\r\n\r\nexport class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            logged_in:   isAuthenticated(), // есть ли уже токен доступа к серверу и  информация о пользователе ?\r\n\r\n            restoring_session: false,       // на время восстановления старой сессии не будем ничего рисовать на экране, чтобы не мелькало\r\n            return_to:   { pathname: '/' }, // куда вернемся после восстановления сессии - если не было сюда явного редиректа - вернемся в корень\r\n\r\n            inputEmail:  '',                // поля ввода в форме\r\n            inputCode:   '',\r\n\r\n            wrong_email: false,             // состояния UI\r\n            code_sent:   false,\r\n        };\r\n\r\n        // запоминаем, откуда нас сюда заредиректили, чтобы потом вернуться\r\n        if ( this.props.location.state !== undefined )\r\n            this.state.return_to =  this.props.location.state.from;\r\n\r\n        // может быть не аутентифицированы сейчас, но были при прошлом посещении страницы?\r\n        let was_logged_before = localStorage.getItem('isLoggedIn');\r\n        if ( accessToken === null &&  was_logged_before ) {\r\n            // флаг, предотвращающий мелькание экрана\r\n            this.state.restoring_session = true;\r\n            // на случай ошибки сбрасываем флаг наличия сессии, чтобы не было бесконечного цикла\r\n            localStorage.removeItem('isLoggedIn');\r\n            // пытаемся восстановить токен с сервера \r\n            auth.checkSession({}, (err, authResult) => {\r\n                if (authResult && authResult.accessToken && authResult.idToken) {\r\n                    loggedIn(authResult);\r\n                    API.getMe((json) => {\r\n                        me = json;\r\n                        this.setState({ logged_in: true })\r\n                    });\r\n                }\r\n                else\r\n                    // попытка залогиниться не прошла, рисуем форму логина\r\n                    this.setState({ restoring_session: false })\r\n            });\r\n        }\r\n\r\n        // странная ситуация - есть токен, но не загружена информация о себе - загружаем\r\n        if ( accessToken !== null && me === null ) {\r\n            API.getMe((json) => {\r\n                me = json;\r\n                this.setState({ logged_in: true })\r\n            });\r\n        }\r\n\r\n        // Вариант для HashRouter - обрабатываем callback от Auth0 с токеном в URL\r\n        if ( props.match.params.hash !== undefined ){\r\n            // флаг, предотвращающий мелькание экрана\r\n            this.state.restoring_session = true;\r\n            auth.parseHash( \r\n                { hash: '#access_token=' + props.match.params.hash },\r\n                (err, authResult) => {\r\n                    if ( authResult && authResult.accessToken && authResult.idToken ) {\r\n                        loggedIn(authResult);\r\n                        API.getMe((json) => {\r\n                            me = json;\r\n                            this.setState({ logged_in: true })\r\n                        });\r\n                    }\r\n                    else \r\n                        // попытка залогиниться не прошла, рисуем форму логина\r\n                        this.setState({ restoring_session: false })\r\n                }\r\n            );\r\n        }\r\n\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.performLogIn      = this.performLogIn.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({ [target.id]: target.value, wrong_email: false });\r\n    }\r\n\r\n    performLogIn(event){\r\n        if ( this.state.code_sent === false ){ \r\n            auth.passwordlessStart({ \r\n                connection: 'email', \r\n                send: 'code', \r\n                email: this.state.inputEmail,\r\n            }, (err,res) => {\r\n                if ( err !== null )\r\n                    this.setState ({ code_sent: false, wrong_email: true });\r\n                else \r\n                    this.setState ({ code_sent: true, wrong_email: false });\r\n            });\r\n        }\r\n        else {\r\n            auth.passwordlessLogin({ \r\n                connection: 'email', \r\n                email: this.state.inputEmail,\r\n                verificationCode: this.state.inputCode,\r\n            }, (err,res) => {\r\n                console.log('err=', err);\r\n                console.log('res=', res);\r\n            });\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render () {\r\n        const no_user = this.state.wrong_email;\r\n\r\n        if ( this.state.logged_in )\r\n            return <Redirect to={this.state.return_to} />;\r\n        else if ( this.state.restoring_session )\r\n            return <center><h4 className='p-4 text-muted'>Logging in, please wait...</h4></center> ; // не мелькаем экраном на вермя восстановления сессии\r\n        else\r\n            return (\r\n            <main>\r\n                <form className=\"form-signin text-center my-5\" onSubmit = { this.performLogIn }>\r\n                    <img className=\"mb-4\" src=\"https://www.nodelfilms.com/assets/icons/nodelfilms-icon.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                    <h1 className=\"h3 mb-3 font-weight-normal\">\r\n                        Вход только для зарегистрированны пользователей\r\n                    </h1>\r\n                    {\r\n                        this.state.code_sent && \r\n                        <p className='text-secondary'>\r\n                            Код подтверждения отправлен на указанную почту. Для входа, введите код в поле ниже:\r\n                        </p>\r\n                    }\r\n                    <div className=\"input-group\">\r\n                        { this.state.code_sent || \r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">@</span>\r\n                            </div>\r\n                        }\r\n                    <input type= { this.state.code_sent ? 'hidden' : 'email' }\r\n                           id=\"inputEmail\" \r\n                           className={no_user ? \"form-control is-invalid\" : \"form-control\"}\r\n                           placeholder=\"Email\" \r\n                           value={this.state.inputEmail} \r\n                           onChange={this.handleInputChange}\r\n                           autoFocus={true}/>\r\n                    { no_user &&\r\n                        <div className=\"invalid-feedback\">\r\n                            Пользователь не зарегистрирован\r\n                        </div>\r\n                    }\r\n                    </div>\r\n                    <input type={ this.state.code_sent ? 'number' : 'hidden' }\r\n                           id=\"inputCode\" \r\n                           className=\"form-control\" \r\n                           placeholder=\"Код из письма\" \r\n                           value={this.state.inputCode} \r\n                           onChange={this.handleInputChange}\r\n                           autoFocus={true}/>\r\n                    <button className=\"btn btn-primary btn-block my-2\" type=\"submit\">\r\n                        { this.state.code_sent ? ' Проверить код' : ' Получить код для входа' }\r\n                    </button>\r\n                    <small>\r\n                        <a href=\"/\" onClick={ (event)=>{ auth.authorize(); event.preventDefault(); } }>\r\n                            Вход по паролю\r\n                        </a>\r\n                    </small>\r\n                    <p className=\"mt-5 mb-3 text-muted\">\r\n                        © 2019, nodelfilms.com\r\n                    </p>\r\n                </form>\r\n            </main> \r\n        );\r\n    }    \r\n}\r\n\r\nexport function Logout (props) {\r\n    if ( accessToken !== null ){\r\n        // Remove isLoggedIn flag from localStorage\r\n        me = null;\r\n        localStorage.removeItem('isLoggedIn');\r\n        auth.logout( { returnTo: LOGIN_URL, clientID: CLIENT_ID });\r\n    }\r\n    // это будет отображено на экране на короткое время, \r\n    // пока идет запрос к серверу авторизации\r\n    // потом будет редирект страницу логина\r\n    return (<center><h4 className='p-4 text-muted'>Logging out, please wait...</h4></center>);\r\n}","import React           from 'react';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport Avatar          from './Avatar';\r\nimport { getMe }       from './Login';\r\n\r\nfunction MenuItem (props) {\r\n    if (props.where === props.to){\r\n        return (\r\n            <li className=\"nav-item active\">\r\n                <div className=\"nav-link\">{props.text}</div>\r\n            </li>\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={props.to}>{props.text}</Link>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default function Navbar(props) {\r\n    const me = ( props.me !== undefined ) ? props.me : getMe();\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <Route render={ (p)=> <MenuItem where={p.location.pathname} text=\"Начало\" to=\"/\" /> } />\r\n                    { me.is_admin && \r\n                        <Route render={ (p)=> <MenuItem where={p.location.pathname} text=\"Новый проект\" to=\"/new_project\"  /> } /> }\r\n                    <Route render={ (p)=> <MenuItem where={p.location.pathname} text=\"Выйти\" to=\"/logout\"  /> } />\r\n                </ul>\r\n            </div>\r\n            <li className=\"navbar-text dropdown\">\r\n                <Avatar email={me.email} size='30' />\r\n                <span className='ml-2'><Link to={'/user/'+me.id} className='text-white-50'>{me.name}</Link></span>\r\n            </li>\r\n        </nav>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link }             from 'react-router-dom';\r\n\r\nimport TimeAgo              from 'react-timeago';\r\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\r\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\r\n\r\nimport API                  from './server_api'\r\n\r\nimport './ProjectWithFolders.css';\r\n\r\nconst formatter = buildFormatter(ruStrings);\r\n\r\nfunction Folder(props) {\r\n    const empty = (props.files_num === 0);\r\n    const icon = empty ? \"img/folder-empty.svg\" : \"img/folder.svg\";\r\n    const animated = (props.animate===true) ? \"folder-animated \" : \"\";\r\n    return (\r\n        <div className={ animated + \"list-group-item\" } key={props.id}>\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n                <div className=\"media\">\r\n                    <Link to={\"/folder/\"+props.id} className=\"align-self-center\">\r\n                        <img src={icon} className=\"mr-3\" height=\"66\" alt=\"folder\" />\r\n                    </Link>\r\n                    <div className=\"media-body\">\r\n                        <Link to={\"/folder/\"+props.id} className='text-dark'>\r\n                            <h4 className=\"mt-0 mb-0 text-break\">{props.name}</h4>\r\n                        </Link>\r\n                        <small>\r\n                        { empty ? \r\n                            <p className=\"mb-0 text-secondary\">Нет файлов</p> :\r\n                            <p className=\"mb-0 text-secondary\">Файлов: {props.files_num}</p> \r\n                        } \r\n                        <p className=\"mb-0 text-secondary\">\r\n                            <TimeAgo date={props.updated} formatter={formatter} />\r\n                        </p>\r\n                        </small>\r\n                    </div>\r\n                </div>\r\n                { empty && <button type=\"button\" className=\"close\" onClick={props.callback} id={props.id}>&times;</button> }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NewFolder(props) {\r\n    return (\r\n        <form className=\"form-inline mt-3\" autoComplete=\"off\" onSubmit={props.onAdd}>\r\n            <label className=\"sr-only\" htmlFor=\"folderName\">Name</label>\r\n            <input type=\"text\" maxLength=\"50\" className=\"form-control mb-2 mr-sm-2\" id=\"folderName\" \r\n                placeholder=\"Название папки\" onChange={props.onEdit} value={props.text}/>\r\n            { props.text.length >  0 ?\r\n                <button type=\"submit\" className=\"btn btn-primary btn-sm mb-2 mr-2\">Создать</button> :\r\n                <button type=\"submit\" className=\"btn btn-primary btn-sm mb-2 mr-2\" disabled>Создать</button>\r\n            }\r\n            <button className=\"btn btn-primary btn-sm mb-2\" onClick={props.onCancel}>Отмена</button>\r\n        </form>        \r\n    );\r\n}\r\n\r\nfunction ProjectName(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"row mt-3\">\r\n                <div className=\"col-sm-8 mx-1\">\r\n                    <Link to={ '/project/' + props.id } className='text-dark mb-0'>\r\n                        <h2> {props.name}</h2>\r\n                    </Link>\r\n                </div>\r\n                <div className=\"col-sm mx-1 pt-sm-2 text-sm-right\">\r\n                    <small className=\"text-muted\"><TimeAgo date={props.updated} formatter={formatter}/></small>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col mx-1\">\r\n                    <p className=\"mb-0\">{props.description}</p>\r\n                </div>        \r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col mx-1\">\r\n                    { props.new_folder || <a href=\"/#\" onClick={props.onClick}><small>Добавить папку »</small></a> }\r\n                </div>        \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nclass ProjectWithFolders extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state              = props.project;\r\n        this.state.new_folder   = false;\r\n        this.state.new_folder_name = '';\r\n\r\n        this.onNewFolder        = this.onNewFolder.bind(this);\r\n        this.onCancel           = this.onButtonCancel.bind(this);\r\n        this.onAdd              = this.onButtonAdd.bind(this);\r\n        this.handleInputChange  = this.handleInputChange.bind(this);\r\n        this.onButtonAdd        = this.onButtonAdd.bind(this);\r\n        this.onButtonDelete     = this.onButtonDelete.bind(this);\r\n        this.onButtonCancel     = this.onButtonCancel.bind(this);\r\n        this.folderAdded        = this.folderAdded.bind(this);\r\n        this.folderDeleted      = this.folderDeleted.bind(this);\r\n    }\r\n\r\n    onNewFolder(event){\r\n        event.preventDefault();\r\n        this.setState({ new_folder: true, new_folder_name: '' });\r\n    }\r\n\r\n    onButtonAdd(event){\r\n        event.preventDefault();\r\n        this.setState({ new_folder: false });\r\n        API.addFolder(this.folderAdded, this.state.id, this.state.new_folder_name);\r\n    }\r\n\r\n    onButtonCancel(event){\r\n        event.preventDefault();\r\n        this.setState({ new_folder: false });\r\n    }\r\n\r\n    onButtonDelete(event){\r\n        event.preventDefault();\r\n        API.deleteFolder(this.folderDeleted, event.target.id);\r\n    }\r\n\r\n    folderAdded(folder){\r\n        let folders = this.state.folders;\r\n        // если создаем папку с дублирующимся имеем, сервер не создаст новую папку,\r\n        // а вернет уже существующую с тем же именем. проверяем уникальность\r\n        for (let i=0; i<folders.length; i++){\r\n            folders[i].animate = false;\r\n            if ( folders[i].id === folder.id ){\r\n                // удаляем, чтобы затем добавить на вершину списка\r\n                folders.splice(i,1);\r\n                i--;\r\n            }\r\n        }\r\n        // эту папочку нужно красиво появить на экране\r\n        folder.animate = true;\r\n        folders.unshift(folder);\r\n        this.setState({ folders: folders });\r\n    }\r\n\r\n    folderDeleted(id){\r\n        let folders = [];\r\n        // сохраняем все, кроме удаленной папки\r\n        for (let i in this.state.folders)\r\n            if ( this.state.folders[i].id !== id )\r\n                folders.push(this.state.folders[i]);\r\n        this.setState({ folders: folders });\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        switch (event.target.id){\r\n            case 'folderName':\r\n                this.setState({ new_folder_name: event.target.value});\r\n                break;\r\n            default:\r\n        }\r\n    }    \r\n \r\n    render() {\r\n        // строим массив фолдеров\r\n        const sorted = this.state.folders.sort( (a,b)=>{ return new Date(b.updated)-new Date(a.updated);} );\r\n        const FoldersArray=[];\r\n        for (let i in sorted ){\r\n            // добавляем сслыку на колбэк\r\n            let f = sorted[i];\r\n            f.callback = this.onButtonDelete;\r\n            FoldersArray.push(Folder(f));\r\n        }\r\n        // рендерим\r\n        return (\r\n            <div className=\"mb-4\">\r\n                <ProjectName \r\n                    id={this.state.id} \r\n                    name={this.state.name} \r\n                    updated={this.state.updated} \r\n                    onClick={this.onNewFolder} \r\n                    new_folder={this.state.new_folder}/>\r\n                    \r\n                { this.state.new_folder && <NewFolder \r\n                    onAdd={this.onButtonAdd} \r\n                    onCancel={this.onButtonCancel} \r\n                    onEdit={this.handleInputChange} \r\n                    text={this.state.new_folder_name}/> }\r\n\r\n                <div className=\"list-group shadow mt-3\">\r\n                    {FoldersArray}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectWithFolders;\r\n","import React, { Component } from 'react';\r\nimport { Redirect }         from \"react-router-dom\";\r\n\r\nimport Navbar               from './Navbar';\r\nimport Project              from './ProjectWithFolders'\r\nimport API                  from './server_api'\r\nimport { isAuthenticated }  from './Login'\r\n\r\n\r\n// выводим подряд все проекты\r\nexport default class ProjectsList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            projects: null,\r\n            loading:  true,  // пока еще загружаем список проектов\r\n        };\r\n    }\r\n    \r\n    componentWillMount() {\r\n        // Теперь время загрузить список проектов с сервера\r\n        if ( isAuthenticated() )\r\n            API.getProjectsList( (json)=>{this.setState({ projects: json, loading: false });} );\r\n    }\r\n\r\n    render () {\r\n        // неавторизованных пользователей перенаправляем на страницу логина\r\n        if ( !isAuthenticated() )\r\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\r\n\r\n        let projects = [];\r\n        if ( this.state.projects !== null )\r\n            projects = this.state.projects.map( prj => { return <Project project={prj} key={prj.id}/>; } );\r\n\r\n        return ([\r\n            <Navbar key='navbar' />,\r\n            <main key='body' role=\"main\" className=\"container\">\r\n                {projects}\r\n                { this.state.loading || projects.length > 0 ||\r\n                    <center className=\"p-4\">\r\n                        <img className=\"m-4\" src=\"http://nodelfilms.com/assets/icons/nodelfilms-icon.svg\" alt=\"\" width=\"72\" height=\"72\" />\r\n                        <h3 >Вы сейчас не участвуете ни в одном из проектов.</h3>\r\n                        <p>Если это не так, то свяжитесь с нами, чтобы мы настроили Вам права доступа.</p>\r\n                    </center>                \r\n                }\r\n            </main>\r\n        ]);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './FileDropzone.css';\r\n\r\nexport default class FileDropzone extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { hightlight: \"\" };\r\n        this.fileInputRef = React.createRef();\r\n\r\n        this.openFileDialog = this.openFileDialog.bind(this);\r\n        this.onFilesAdded   = this.onFilesAdded.bind(this);\r\n        this.onDragOver     = this.onDragOver.bind(this);\r\n        this.onDragLeave    = this.onDragLeave.bind(this);\r\n        this.onDrop         = this.onDrop.bind(this);\r\n    }\r\n\r\n    openFileDialog() {\r\n        this.fileInputRef.current.click();\r\n    }\r\n\r\n    onFilesAdded(evt) {\r\n        // преобразуем список в обычный массив\r\n        const files = evt.target.files;\r\n        let array =[];\r\n        for (var i = 0; i < files.length; i++)\r\n            array.push(files.item(i));\r\n        // вызываем колбек\r\n        if (this.props.onFilesAdded)\r\n            this.props.onFilesAdded(array);\r\n    }\r\n\r\n    onDrop(event) {\r\n        event.preventDefault();\r\n        // преобразуем список в обычный массив\r\n        const files = event.dataTransfer.files;\r\n        let array =[];\r\n        for (var i = 0; i < files.length; i++)\r\n            array.push(files.item(i));\r\n        // вызываем колбек\r\n        if (this.props.onFilesAdded)\r\n            this.props.onFilesAdded(array);\r\n        this.setState({ hightlight: \"\" });\r\n    }\r\n\r\n    onDragOver(evt) {\r\n        evt.preventDefault();\r\n        this.setState({ hightlight: \"ZoneHighlight\" });\r\n    }\r\n\r\n    onDragLeave() {\r\n        this.setState({ hightlight: \"\" });\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className={\"p-1 \" + this.state.hightlight } \r\n                onDragOver={this.onDragOver} \r\n                onDragLeave={this.onDragLeave} \r\n                onDrop={this.onDrop} >\r\n\r\n                {this.props.children}\r\n                \r\n                <div className=\"d-flex w-100 flex-column align-items-center my-4 p-4 Dropzone\">\r\n\r\n                    <img src=\"img/cloud-upload.svg\" \r\n                        alt=\"upload\" \r\n                        height=\"150\" \r\n                        onClick={this.openFileDialog} \r\n                        style={{ cursor: \"pointer\" }} />\r\n                    \r\n                    <input ref={this.fileInputRef} \r\n                        className=\"InvisibleFileInput\" \r\n                        type=\"file\" multiple \r\n                        onChange={this.onFilesAdded} />\r\n                    \r\n                    <button type=\"button\" \r\n                        className=\"btn btn-secondary btn-lg mb-3\" \r\n                        onClick={this.openFileDialog}>Загрузите файлы</button>\r\n                    \r\n                    <center><p>Или перетащите файлы сюда для закачки</p></center>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React    from 'react';\r\nimport filesize from 'filesize'\r\n\r\nimport TimeAgo              from 'react-timeago';\r\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\r\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\r\n\r\nimport API                  from './server_api'\r\n\r\nconst formatter = buildFormatter(ruStrings);\r\n\r\n\r\nfunction FileUploading(props) {\r\n    return (\r\n        <div className=\"d-flex w-100\">\r\n            <div className=\"align-self-center mx-3\">\r\n                <img src=\"img/cloud-upload-gray.svg\" height=\"50\" alt=\"upload\" />\r\n            </div>\r\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\r\n                <h4 className=\"text-dark my-0 mr-3 text-break text-muted\">\r\n                    {props.name}\r\n                </h4>\r\n                <div className=\"progress flex-grow-1 mr-2\" style={{height: \"22px\"}}>\r\n                    <div className=\"progress-bar progress-bar-striped progress-bar-animated\" \r\n                        style={{width: props.progress+\"%\"}}>\r\n                        {Math.round(props.progress) + \"%\"}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" \r\n                className=\"close mr-2\" \r\n                onClick={props.callback} \r\n                id={props.index}>\r\n                    &times;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction FileQueued(props) {\r\n    return (\r\n        <div className=\"d-flex w-100\">\r\n            <div className=\"align-self-center mx-3\">\r\n                <img src=\"img/cloud-upload-light.svg\" height=\"50\" alt=\"upload\" />\r\n            </div>\r\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\r\n                <h4 className=\"text-dark my-0 mr-3 text-break text-muted\">\r\n                    {props.name}\r\n                </h4>\r\n                <small className=\"flex-grow-1 mr-2 text-secondary\">\r\n                    В очереди на загрузку\r\n                </small>\r\n            </div>\r\n            <button type=\"button\" \r\n                className=\"close mr-2\" \r\n                onClick={props.callback} \r\n                id={props.index}>\r\n                    &times;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction FileError(props) {\r\n    return (\r\n        <div className=\"d-flex w-100\">\r\n            <div className=\"align-self-center mx-3\">\r\n                <img src=\"img/error.svg\" height=\"50\" alt=\"upload\" />\r\n            </div>\r\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\r\n                <h4 className=\"text-dark my-0 mr-3 text-break text-muted\">\r\n                    {props.name}\r\n                </h4>\r\n                <small className=\"flex-grow-1 mr-2 text-secondary\">\r\n                    {props.error_text}\r\n                </small>\r\n            </div>\r\n            <button type=\"button\" \r\n                className=\"close mr-2\" \r\n                onClick={props.callback} \r\n                id={props.index}>\r\n                    &times;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction FileNormal(props) {\r\n    return (\r\n        <div className=\"d-flex w-100\">\r\n            <a download href={API.fileDownloadURL(props.id, props.token)} className=\"align-self-center mx-3\">\r\n                <img src=\"img/cloud-download.svg\" height=\"50\" alt=\"download\" />\r\n            </a>\r\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\r\n                <a download ref={props.saveRef} href={API.fileDownloadURL(props.id, props.token)} className=\"flex-grow-1 text-dark\">\r\n                    <h4 className=\"my-0 mr-2 text-break\">\r\n                        {props.name}\r\n                    </h4>\r\n                </a>\r\n                <div className=\"d-flex flex-column flex-md-row\">\r\n                    <small className=\"mx-md-2 mx-0 text-body text-break\">\r\n                        { filesize(props.size) }\r\n                    </small> \r\n                    <small className=\"mx-md-2 mx-0 text-secondary text-break\">\r\n                        <TimeAgo date={props.uploaded} formatter={formatter} />\r\n                    </small> \r\n                    <small className=\"mr-md-2 mx-0 text-secondary text-break\">\r\n                        {props.user}\r\n                    </small>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default function File(props) {\r\n    let file;\r\n    if (props.queued)\r\n        file = FileQueued(props);\r\n    else if (props.uploading)\r\n        file = FileUploading(props);\r\n    else if (props.error)\r\n        file = FileError(props);\r\n    else\r\n        file = FileNormal(props);\r\n    return (\r\n    <div key={props.index} className=\"list-group-item p-1\">\r\n        {file}\r\n    </div>);\r\n}\r\n","function Seconds(x) {\r\n    const last_digit = x %  10;\r\n\r\n    // 11,12,13,14 - исключения\r\n    if ( x>10 && x < 15 )\r\n        return x + ' секунд';\r\n\r\n    switch(last_digit){\r\n        case 1:\r\n            return x + ' секунда';\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n            return x + ' секунды';\r\n        default:\r\n            return x + ' секунд';\r\n    }\r\n}\r\n\r\nfunction Minutes(x) {\r\n    const last_digit = x %  10;\r\n\r\n    // 11,12,13,14 - исключения\r\n    if ( x>10 && x < 15 )\r\n        return x + ' минут';\r\n\r\n    switch(last_digit){\r\n        case 1:\r\n            return x + ' минута';\r\n        case 2:\r\n        case 3:\r\n        case 4:\r\n            return x + ' минуты';\r\n        default:\r\n            return x + ' минут';\r\n    }\r\n}\r\n\r\nexport default function TimeLeft(mseq) {\r\n    const fsecs  = mseq / 1000;\r\n    const fhours = fsecs / 3600;\r\n    const fmins  = fsecs / 60;\r\n    \r\n    const hours  = Math.floor(fhours);\r\n    const mins   = Math.floor(fmins) % 60;\r\n    const secs   = Math.floor(fsecs) % 60;\r\n\r\n    if (fhours >= 5)\r\n        return (hours + \" часов\"); // следующий падеж - 21 час, не поддерживаем пока\r\n    else if (fhours >= 2)\r\n        return (hours + \" часа \" + Minutes(mins));\r\n    else if (fhours >= 1)\r\n        return (\"1 час \" + Minutes(mins));\r\n    else if (mins >= 3)\r\n        return Minutes(mins);\r\n    else if (mins >= 1)\r\n        return (Minutes(mins) + ' ' + Seconds(secs));\r\n    else\r\n        return (Seconds(secs));\r\n\r\n}\r\n\r\n/*\r\nfunction test (h,m,s,ms){\r\n    let output = h+':'+m+':'+s+'('+ms+') ' \r\n        + TimeLeft(ms+1000*(s+60*(m+60*h)));\r\n    console.log(output);\r\n}\r\n\r\ntest(10,45,5,123);\r\ntest(4,45,5,123);\r\ntest(3,45,5,123);\r\ntest(2,45,5,123);\r\ntest(1,45,5,123);\r\ntest(0,45,5,123);\r\ntest(0,43,5,123);\r\ntest(0,41,5,123);\r\ntest(0,11,5,123);\r\ntest(0,3,0,123);\r\ntest(0,2,1,123);\r\ntest(0,2,2,123);\r\ntest(0,2,3,123);\r\ntest(0,2,5,123);\r\ntest(0,1,5,123);\r\ntest(0,0,5,123);\r\ntest(0,0,3,123);\r\ntest(0,0,1,123);\r\ntest(0,0,0,0);\r\n*/\r\n\r\n","import React         from 'react';\r\nimport filesize      from 'filesize';\r\nimport TimeLeft      from './TimeLeft';\r\nimport API           from './server_api'\r\n\r\n\r\n\r\nexport default function FolderStats(props) {\r\n    let progress = props.stats.uploaded_so_far;\r\n\r\n    // прогресс с учетом файлов, которые еще загружаются\r\n    for (let i in props.stats.files) {\r\n        const f = props.stats.files[i];\r\n        if (f.uploading) {\r\n            progress += f.size * f.progress / 100;\r\n        }\r\n    }\r\n\r\n    let percentage = 0, elapsed = 0, time_left = 0;\r\n    if (props.stats.uploading_now) {\r\n        // оставшийся процент\r\n        percentage = (100 * (props.stats.total_to_upload - progress) / props.stats.total_to_upload).toFixed(1);\r\n        // оставшееся время (в миллисекундах)\r\n        elapsed = (new Date()).getTime() - props.stats.upload_started.getTime();\r\n        time_left = elapsed / progress * (props.stats.total_to_upload - progress + 1);\r\n    }\r\n\r\n    const downloadAll = function (event){\r\n        event.preventDefault();\r\n        console.log(props.linkrefs);\r\n        for (let i in props.linkrefs)\r\n            setTimeout((ref)=>{ref.click()}, i*300, props.linkrefs[i]);\r\n    }\r\n    \r\n    return (<div className=\"d-flex flex-wrap w-100 justify-content-left my-2\">\r\n        \r\n        <small className=\"mr-3 flex-grow-1\">\r\n            { props.stats.files.length > 0 && props.stats.files.length < 6 && !props.stats.uploading_now && \r\n                [<a download href=\"/#\" onClick={downloadAll}>\r\n                    Скачать по одному »\r\n                </a>,\r\n                <a className=\"mr-3\"/>]\r\n            }\r\n            { props.stats.files.length > 3 && !props.stats.uploading_now && \r\n                <a download href={API.fileDownloadURL(props.stats.id, props.stats.zip_token)}>\r\n                    Скачать все (zip) »\r\n                </a>\r\n            }\r\n        </small>\r\n        <div className=\"mx-1 text-body\">\r\n            {props.stats.uploading_now ?\r\n                <small>\r\n                    <span className=\"text-secondary\"> Загружаем </span>\r\n                    {filesize(props.stats.total_to_upload)}\r\n                    <span className=\"text-secondary\">, осталось </span>\r\n                    {percentage + '%, '}\r\n                    {TimeLeft(time_left)}\r\n                </small> :\r\n                <small>\r\n                    {props.stats.files.length}\r\n                    <span className=\"text-secondary\"> файла(ов), </span>\r\n                    {filesize(props.stats.total_uploaded)}\r\n                </small>}\r\n        </div>\r\n    </div>);\r\n}\r\n","import React     from 'react';\r\nimport { Link }  from \"react-router-dom\";\r\n\r\nexport default function Breadcrumbs(props) {\r\n    return (<nav aria-label=\"breadcrumb\">\r\n        <ol className=\"breadcrumb mb-2\">\r\n            <li className=\"breadcrumb-item\"><Link to=\"/\">Все проекты</Link></li>\r\n            { props.parent_id !== undefined &&\r\n                <li className=\"breadcrumb-item\"><Link to={\"/project/\" + props.parent_id}>{props.parent_name}</Link></li>\r\n            }\r\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">{props.name}</li>\r\n        </ol>\r\n    </nav>);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect }         from \"react-router-dom\";\r\nimport Navbar               from './Navbar';\r\nimport FileDropzone         from './FileDropzone';\r\nimport File                 from './File';\r\nimport API                  from './server_api'\r\nimport FolderStats          from './FolderStats';\r\nimport Breadcrumbs          from './Breadcrumbs';\r\nimport { isAuthenticated }  from './Login'\r\n\r\n\r\n\r\nexport default class Folder extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name:            null,\r\n            id:              this.props.match.params.id,\r\n            zip_token:       null,\r\n            parent_id:       null,\r\n            files:           [],\r\n            uploading_now:   false,\r\n            upload_started:  null,\r\n            uploaded_so_far: 0,\r\n            total_to_upload: 0,\r\n            total_uploaded:  0,\r\n         };\r\n\r\n        this.onFilesAdded     = this.onFilesAdded.bind(this);\r\n        this.onCancelFile     = this.onCancelFile.bind(this);\r\n        this.onFileUpoaded    = this.onFileUpoaded.bind(this);\r\n        this.onUploadProgress = this.onUploadProgress.bind(this);\r\n        this.onUploadError    = this.onUploadError.bind(this);\r\n        this.onFileListLoaded = this.onFileListLoaded.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        if ( isAuthenticated() )\r\n            API.getFolder( this.onFileListLoaded, this.props.match.params.id );\r\n    }\r\n\r\n    onFileListLoaded(json){\r\n        let size=0;\r\n        for (let i in json.files)\r\n            size += json.files[i].size;\r\n        this.setState({\r\n            name:        json.name,\r\n            parent_id:   json.parent_id,\r\n            parent_name: json.parent_name,\r\n            files:       json.files,\r\n            zip_token:   json.zip_token,\r\n            total_uploaded: size,\r\n        });\r\n    }\r\n\r\n    onFilesAdded(files){\r\n        const new_files=[];\r\n        let added_size=0;\r\n        // Добавляем новые файлы в очередь на закачку\r\n        for (let i in files) {\r\n            // не позволяем заливать дубликаты\r\n            let duplicate = false;\r\n            for (let j in this.state.files){\r\n                if ( this.state.files[j].error !== true &&  this.state.files[j].name === files[i].name ) {\r\n                    duplicate = true;\r\n                    new_files.push({ name: files[i].name, error: true, error_text: \"Файл с таким именем уже есть в этой папке.\" });\r\n                    break;\r\n                }\r\n            }\r\n            // ставим в очередь на закачку\r\n            if ( duplicate === false ){\r\n                const file = { \r\n                    name: files[i].name,\r\n                    size: files[i].size,\r\n                    file: files[i],\r\n                    queued: true, \r\n                };\r\n                new_files.push(file);\r\n                added_size += files[i].size;\r\n            }\r\n        }\r\n        // асинхронно добавляем их к состоянию\r\n        this.setState( old_state => ({\r\n            files: old_state.files.concat(new_files),\r\n            total_to_upload: old_state.total_to_upload+added_size,\r\n        }));\r\n        // запускаем закачку следующих по очереди\r\n        this.rollQueue();\r\n    }\r\n\r\n    rollQueue(){\r\n        // делаем обновление асинхронно\r\n        if ( isAuthenticated() ) // нужно регулярно вызывать этот метод, чтобы обнолять устаревающие токены\r\n            this.setState( old_state => {\r\n\r\n            const files = old_state.files;\r\n            // считаем количество текущих закачек\r\n            let uploads = 0;\r\n            for (let i in files)\r\n                if ( files[i].uploading )\r\n                    uploads++;\r\n\r\n            // запускаем новые, если нужно\r\n            while (uploads < 3){\r\n                // ищем следующую в очереди\r\n                let next = null;\r\n                for(let i in files){\r\n                    if ( files[i].queued ){\r\n                        next = i;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                // выходим, если очередь закончилась\r\n                if (next === null)\r\n                    break;\r\n\r\n                // запускаем реальную загрузку\r\n                const ref = API.uploadFile(this.props.match.params.id, files[next].file, this.onUploadProgress, this.onFileUpoaded, this.onUploadError);\r\n\r\n                // добавляем в табличку новую загрузку\r\n                files[next] = { \r\n                    name: files[next].name,\r\n                    size: files[next].size,\r\n                    uploading: true, \r\n                    progress: 0,\r\n                    ref,\r\n                };\r\n                uploads++;\r\n            }\r\n            \r\n            // если это самое начало - инициализируем статистику\r\n            if ( (!old_state.uploading_now) && uploads > 0 ){\r\n                // считаем полный объем данных для закачки\r\n                let to_upload = 0;\r\n                for (let i in files)\r\n                    if ( files[i].uploading || files[i].queued )\r\n                        to_upload += files[i].size;\r\n\r\n                // обвноляем состояние и статистику\r\n                return { \r\n                    files: files,\r\n                    uploading_now: true,\r\n                    upload_started: new Date(),\r\n                    total_to_upload: to_upload,\r\n                    uploaded_so_far: 0\r\n                };\r\n            }\r\n\r\n            // просто обновляем состояние\r\n            return { \r\n                files: files,\r\n                uploading_now: (uploads > 0),\r\n            };\r\n        });\r\n    }\r\n\r\n    onCancelFile(event){\r\n        event.preventDefault();\r\n        const index = event.target.id;\r\n        // обрываем закачку\r\n        if ( this.state.files[index].uploading )\r\n            this.state.files[index].ref.abort();\r\n        // асинхронно удаляем из состояния\r\n        this.setState( old_state =>{\r\n            const new_files = old_state.files;\r\n            const size = new_files[index].size;\r\n            new_files.splice(index, 1);\r\n            return { \r\n                files: new_files,\r\n                total_to_upload: old_state.total_to_upload - size,\r\n            };\r\n        });\r\n        // запускаем закачку следующих по очереди\r\n        this.rollQueue();\r\n    }\r\n\r\n    // Обновляем состояние при окончании загрузки файла\r\n    onFileUpoaded(name, json){\r\n        this.setState( old_state => {\r\n            const copy = old_state.files;\r\n            let size=0;\r\n            for (let i in copy){\r\n                const file =  copy[i];\r\n                if ( file.uploading && file.name === name ){\r\n                    if ( json.error !== undefined ){\r\n                        copy[i] = { name, error: true, error_text: json.error };\r\n                    }\r\n                    else {\r\n                        copy[i] = json; \r\n                    }\r\n                    size += file.size;\r\n                    break;\r\n                }\r\n            }\r\n            return ({ \r\n                files:           copy,\r\n                uploaded_so_far: old_state.uploaded_so_far+size,\r\n                total_uploaded:  old_state.total_uploaded+size,\r\n            });\r\n        });\r\n        // запускаем закачку следующих по очереди\r\n        this.rollQueue();\r\n    }\r\n\r\n    // Обновляем прогресс загрузки файла\r\n    onUploadProgress(name, progress){\r\n        this.setState( old_state => {\r\n            const copy = old_state.files;\r\n            for (let i in copy){\r\n                const file =  copy[i];\r\n                if ( file.uploading && file.name === name )\r\n                    copy[i].progress = progress;\r\n            }\r\n            return ( { files: copy });\r\n        });\r\n    }\r\n\r\n    // Ошибка загрузки,обновляем статус\r\n    onUploadError(name, text){\r\n        this.setState( old_state => {\r\n            const copy = old_state.files;\r\n            for (let i in copy){\r\n                const file =  copy[i];\r\n                if ( file.uploading && file.name === name )\r\n                    copy[i] =  { name, error: true, error_text: text }\r\n            }\r\n            return ( { files: copy });\r\n        });\r\n    }\r\n\r\n    render () {\r\n        // неавторизованных пользователей перенаправляем на страницу логина\r\n        if ( !isAuthenticated() )\r\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\r\n\r\n        // указатели на ссылки для скачивания\r\n        let linkrefs=[];\r\n        let saveRef = function (ref) { linkrefs.push(ref); }\r\n\r\n        // готовим массив файлов - оснащаем коллбеками\r\n        const files = [];\r\n        for(let i in this.state.files ){\r\n            let file = this.state.files[i];\r\n            file.index = i;\r\n            file.callback = this.onCancelFile;\r\n            file.saveRef = saveRef;\r\n            files.push(File(file));\r\n        }\r\n\r\n        return ([\r\n            <Navbar key='navbar' />,\r\n            <Breadcrumbs key='breadcrumbs' \r\n                parent_id = {this.state.parent_id}\r\n                parent_name = {this.state.parent_name}\r\n                name = {this.state.name}/>,\r\n            <main key='body' role=\"main\" className=\"container\">\r\n                <FolderStats stats={this.state} linkrefs={linkrefs} />\r\n                <FileDropzone onFilesAdded={this.onFilesAdded}>\r\n                    <div className=\"list-group shadow\">\r\n                        {files}\r\n                    </div>\r\n                </FileDropzone>\r\n            </main>\r\n        ]);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect }         from \"react-router-dom\";\r\nimport Navbar               from './Navbar';\r\nimport { isAuthenticated }  from './Login'\r\nimport Avatar               from './Avatar';\r\nimport API                  from './server_api'\r\nimport { getMe, updateMe }  from './Login';\r\n\r\nimport TimeAgo              from 'react-timeago';\r\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\r\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\r\n\r\n\r\nconst formatter = buildFormatter(ruStrings);\r\n\r\n\r\nfunction UserDescription (props) {\r\n    const p = props.state;\r\n    const editing = p.editing;\r\n\r\n    // красивый список проектов пользователя\r\n    let projs = [];\r\n    if (p.project_names !== undefined){\r\n        for (let i in p.project_names){\r\n            projs.push(<strong key={i}>{p.project_names[i]}</strong>);\r\n            if ( i < p.project_names.length-1 )\r\n                projs.push(', ');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"border shadow-lg rounded-lg bg-white mt-4 p-4\">\r\n            <div className='d-flex'>\r\n                { p.is_loaded && <Avatar email={p.email} size='120' className='pr-4' /> }\r\n                <div className='flex-fill'>\r\n                    { editing !== 'name' &&\r\n                        <span className='d-flex justify-content-between'>\r\n                            <h1 className=\"display-4 text-break\">{p.name}</h1>\r\n                            <button className='close' disabled={ p.is_deleting || !p.is_loaded }>\r\n                                <img src='img/edit.svg' \r\n                                    className='align-self-start mt-0 ml-sm-5' \r\n                                    onClick={ p.is_deleting ? ()=>{} : props.clb.onEditNameButton } \r\n                                    alt='edit'/>\r\n                            </button>\r\n                        </span>\r\n                    }\r\n                    { editing === 'name' && \r\n                        <form className=\"form-inline mb-4\" onSubmit={ props.clb.onNameChangeButton } autoComplete=\"off\">\r\n                            <div className=\"form-group flex-grow-1\">\r\n                                <input type=\"text\" \r\n                                    className=\"form-control w-100 mr-2\"\r\n                                    id=\"nameEdit\" \r\n                                    maxLength='50'\r\n                                    autoFocus={true} \r\n                                    onChange={props.clb.handleInputChange}\r\n                                    value={ p.nameEdit }/>\r\n                            </div>\r\n                            <div>\r\n                                <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.clb.onCancelButton }>Отмена</button>\r\n                                <button type=\"submit\" className=\"btn btn-primary\">Изменить</button>\r\n                            </div>\r\n                        </form>\r\n                    }\r\n                    <span className='d-flex justify-content-between'>\r\n                        <p className=\"lead text-break\">{p.email}</p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            <hr className=\"my-4\"/>\r\n            { p.is_loaded && p.is_admin &&\r\n                <div>\r\n                    <p>Администратор сервиса. Имеет доступ к:</p>\r\n                    <ul>\r\n                        <li>Созданию и удалению проектов</li>\r\n                        <li>Добавлению и удалению внешних пользователей</li>\r\n                        <li>Управлению доступом внешних пользователей к проектам</li>\r\n                        <li>Созданию новых папок в проектах</li>\r\n                        <li>Скачиванию файлов из папок проекта</li>\r\n                        <li>Загрузке новых файлов в папки</li>\r\n                    </ul>\r\n                </div>\r\n            }\r\n            { p.is_loaded && !p.is_admin &&\r\n                <div>\r\n                    <p>Пользователь сервиса. Имеет доступ к:</p>\r\n                    <ul>\r\n                        <li>Созданию новых папок в проектах</li>\r\n                        <li>Скачиванию файлов из папок проекта</li>\r\n                        <li>Загрузке новых вайлов в папки</li>\r\n                    </ul>\r\n                    { projs.length >0 && <p>Является участником следующих проектов: {projs}.</p> }\r\n                    { projs.length === 0 && <p>В данный момент не участвует ни в одном из проектов.</p> }\r\n                </div>\r\n            }\r\n            { !p.is_loaded || !getMe().is_admin || getMe().id === p.id ||\r\n                <button className=\"btn btn-danger btn-lg mt-3\" \r\n                disabled={ p.is_deleting } \r\n                onClick={ props.clb.onDeleteUser } >\r\n                    Удалить пользователя\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction ServerStatus (props) {\r\n\r\n    // идет перезагрузка?\r\n    if (typeof props.state === 'string')\r\n    return (\r\n        <div className=\"border  shadow-lg rounded-lg bg-white mt-4 p-4\">\r\n            <h1>Идет обновление сервера...</h1>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n    // сторим список обновлений с момента запуска текуще версии\r\n    let updates = [];\r\n    for (let i in props.state.updates)\r\n        updates.push(<li>(<strong>{props.state.updates[i].hash}</strong>) <i>'{props.state.updates[i].name}'</i></li>);\r\n\r\n    return (\r\n        <div className=\"border  shadow-lg rounded-lg bg-white mt-4 p-4\">\r\n            <h1>Статистика сервера</h1>\r\n            <p>\r\n                Стартовал <TimeAgo date={new Date(props.state.uptime_starts)} formatter={formatter} />.<br/>\r\n                Текущая ревизия: (<strong>{props.state.current_hash}</strong>) <i>'{props.state.current_name}'</i>\r\n                , закомичена <TimeAgo date={new Date(props.state.current_date)} formatter={formatter} />.<br/>\r\n                { props.state.updates.length === 0 &&\r\n                    <span>Доступных обновлений нет.</span>\r\n                }\r\n            </p>\r\n            { props.state.updates.length > 0 && <div>\r\n                <h3>Доступны обновления:</h3>\r\n                <ul> {updates} </ul>\r\n                <button className=\"btn btn-danger btn-lg mt-3\"\r\n                    onClick={ props.clb } >\r\n                        Обновить\r\n                </button>\r\n            </div> }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default class User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            is_loaded:   false,\r\n            editing:     'none',\r\n            name:        '',\r\n            email:       '',\r\n            is_deleting:  false,     // отослан запрос на удаление пользователя\r\n            is_deleted:   false,     // пришел ответ, что пользователь удален\r\n            me:           getMe(),\r\n            version_info: null,      // информация о версии серверного приложения\r\n        };\r\n\r\n        // способ отслеживания изменения URI и загрузи правильных данных\r\n        this.cached_id = this.props.match.params.id;\r\n\r\n        this.handleInputChange     = this.handleInputChange.bind(this);\r\n        this.onEditNameButton      = this.onEditNameButton.bind(this);\r\n        this.onNameChangeButton    = this.onNameChangeButton.bind(this);\r\n        this.onCancelButton        = this.onCancelButton.bind(this);\r\n        this.onDeleteUser          = this.onDeleteUser.bind(this);\r\n        this.onUpdateServer        = this.onUpdateServer.bind(this);\r\n    }\r\n\r\n    loadUserInfo(){\r\n        // загружаем информацию о пользователе\r\n        API.getUser( (json)=>{ \r\n            json.is_loaded = true; // информация наконец загружена\r\n            this.setState( json ); \r\n            // загружаем информацию о версии сервера, если это страница админа\r\n            if ( this.state.me.is_admin && this.state.me.email === json.email )\r\n                API.getVersion( (json2) => this.setState( { version_info: json2 }) );\r\n        }, this.props.match.params.id );\r\n    }\r\n\r\n    componentWillMount() {\r\n        if ( isAuthenticated() )\r\n            this.loadUserInfo();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        // отслеживаем изменение ссылки, чтобы перезагрузить информацию о пользователе\r\n        if ( this.cached_id !== this.props.match.params.id ){\r\n            this.cached_id = this.props.match.params.id;\r\n            this.setState({ is_loaded: false })\r\n            this.loadUserInfo();\r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({ [target.id]: target.value });\r\n    }\r\n\r\n    onEditNameButton (event) {\r\n        this.setState( { editing: 'name', nameEdit: this.state.name });\r\n    }\r\n\r\n    onNameChangeButton (event) {\r\n        this.setState({ editing: 'none' });\r\n        API.updateUserName( ()=>{ \r\n            // если редактируем себя - обновляем\r\n            if ( getMe().id === this.props.match.params.id ) {\r\n                let json = getMe();\r\n                json.name = this.state.nameEdit;\r\n                updateMe(json);\r\n            }\r\n            this.setState({name: this.state.nameEdit, me: getMe()}); \r\n        }, this.props.match.params.id, this.state.nameEdit );\r\n        event.preventDefault();\r\n    }\r\n\r\n    onCancelButton (event) {\r\n        this.setState( { editing: 'none' });\r\n    }\r\n\r\n    onDeleteUser (event) {\r\n        this.setState( { editing: 'none', is_deleting: true });\r\n        API.deleteUser(()=>{ this.setState( { is_deleted: true }); }, this.props.match.params.id);\r\n        event.preventDefault();\r\n    }\r\n\r\n    onUpdateServer (event) {\r\n        API.updateServer(()=>{\r\n            // отрисовываем статус обновления сервера\r\n            this.setState({ version_info: 'updating'});\r\n            setTimeout( ()=>{\r\n                // после обновления снова рисуем информацию о версии\r\n                API.getVersion( (json2) => this.setState( { version_info: json2 }) );\r\n            }, 15000);\r\n        });\r\n    }\r\n\r\n    render () {\r\n        // неавторизованных пользователей перенаправляем на страницу логина\r\n        if ( !isAuthenticated() )\r\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\r\n\r\n        // после удаление проекта переходим к списку проектов снова\r\n        if ( this.state.is_deleted )\r\n            return (<Redirect to='/' />);\r\n        \r\n        return ([\r\n            <Navbar key='navbar' me={this.state.me} />,\r\n            <main key='body' role=\"main\" className=\"container\">\r\n                <UserDescription state= {this.state} clb={this} />\r\n                { this.state.version_info &&\r\n                    <ServerStatus state= {this.state.version_info} clb={this.onUpdateServer} /> \r\n                }\r\n            </main>\r\n        ]);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect }         from \"react-router-dom\";\r\nimport Navbar               from './Navbar';\r\nimport { isAuthenticated }  from './Login'\r\nimport API                  from './server_api'\r\n\r\n\r\nexport default class NewProject extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name:           '',\r\n            description:    '',\r\n            processing:     false,  // уже отправили запрос на сервер\r\n            processed:      false,  // уже получили ответ сервере\r\n            id:             '',     // id нового проекта\r\n        };\r\n\r\n        this.handleInputChange     = this.handleInputChange.bind(this);\r\n        this.onCreate              = this.onCreate.bind(this);\r\n        this.onCreated             = this.onCreated.bind(this);\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({ [target.id]: target.value });\r\n    }\r\n\r\n    onCreate(event){\r\n        API.addProject(this.onCreated, this.state.name, this.state.description );\r\n        this.setState({ processing: true });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onCreated(json) {\r\n        this.setState({ processed: true, id: json.id });\r\n    }\r\n\r\n    render() {\r\n        // неавторизованных пользователей перенаправляем на страницу логина\r\n        if ( !isAuthenticated() )\r\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\r\n\r\n        // после получения ответа от сервера отправляем на сраницу настроек нового проекта\r\n        if ( this.state.processed )\r\n            return (<Redirect to={ '/project/'+this.state.id } />);\r\n\r\n        return ([\r\n            <Navbar key='navbar' />,\r\n            <main key='body' role=\"main\" className=\"container\">\r\n                <form onSubmit={this.onCreate} autoComplete=\"off\">\r\n                    <fieldset disabled={this.state.processing}>\r\n                        <h2 className='mt-3'>Создать новый проект</h2>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" \r\n                                className=\"form-control\"\r\n                                id=\"name\" \r\n                                placeholder=\"Введите название\" \r\n                                onChange={this.handleInputChange}\r\n                                value={this.state.name}\r\n                                required />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control\"\r\n                                id=\"description\" \r\n                                rows=\"3\" \r\n                                placeholder=\"Описание проекта (не обязательно)\" \r\n                                onChange={this.handleInputChange}\r\n                                value={this.state.description} />\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\r\n                    </fieldset>\r\n                </form>\r\n            </main>\r\n        ]);\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link }   from \"react-router-dom\";\r\nimport Navbar               from './Navbar';\r\nimport { isAuthenticated }  from './Login'\r\nimport Breadcrumbs          from './Breadcrumbs';\r\nimport Avatar               from './Avatar';\r\nimport API                  from './server_api'\r\nimport { getMe }            from './Login';\r\n\r\nimport TimeAgo              from 'react-timeago';\r\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\r\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\r\n\r\nimport './Project.css'\r\n\r\nconst formatter = buildFormatter(ruStrings);\r\n\r\nfunction emailIsValid (email) {\r\n    if (email === undefined)\r\n        return false;\r\n    const e = email.trim();\r\n    const regexp = /\\S+@\\S+\\.((?:com)|(?:ru))/;\r\n    const m = e.match(regexp);\r\n    //  есть совпадение и оно полное\r\n    return ( m !== null && m[0] === e );\r\n}\r\n\r\nfunction User (props) {\r\n    const icon = (props.icon==='add') ? 'img/add-user.svg' : 'img/delete-user.svg';\r\n    const animated = props.animated ? \"user-animated\" : \"\";\r\n    return (\r\n        <li className={\"list-group-item d-flex align-items-center \"+ animated} >\r\n            <Avatar email={props.user.email} size='80' />\r\n            <div className='flex-grow-1 text-break ml-3'>\r\n                <Link to={'/user/' + props.user.id} className='text-dark'>\r\n                    <h5>{props.user.name}</h5>\r\n                    <span>{props.user.email}</span>\r\n                </Link>\r\n            </div>\r\n            <button className='close' id={props.user.id} onClick={props.func}>\r\n                <img src={icon} id={props.user.id} height=\"50px\" className='ml-2' alt='move user'/>\r\n            </button>\r\n        </li>\r\n    );\r\n}\r\n\r\nfunction NewUser (props) {\r\n    const editing = props.state.editing;\r\n    // валидируем введенный емейл\r\n    const email_valid = emailIsValid(props.state.user_email);\r\n    return (\r\n        <li className=\"list-group-item d-flex align-items-center justify-content-center\">\r\n            { editing === 'user' ||\r\n                <button className='close'>\r\n                    <img src='img/add-new-user.svg' \r\n                    onClick={ props.onNewUserButton } \r\n                    height=\"50px\"\r\n                    alt='edit'/>\r\n                </button>\r\n            }\r\n            { editing === 'user' &&\r\n                <form className=\"form-inline\" onSubmit={ props.onCreateUserButton } autoComplete=\"off\">\r\n                    <div className=\"form-row w-100\">\r\n                        <div className=\"input-group mb-2 col-sm-6\">\r\n                            <input type=\"text\" \r\n                                className=\"form-control\" \r\n                                id=\"user_name\" \r\n                                placeholder=\"Имя\" \r\n                                maxLength='50'\r\n                                onChange={props.handleInputChange}\r\n                                value={props.state.user_name}\r\n                                required/>\r\n                        </div>\r\n                        <div className=\"input-group mb-2 col-sm-6\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <div className=\"input-group-text\">@</div>\r\n                            </div>\r\n                            <input type=\"email\" \r\n                                className={\"form-control \" + (email_valid ? \"is-valid\" :\"is-invalid\")}\r\n                                id=\"user_email\" \r\n                                placeholder=\"Email\"\r\n                                maxLength='50'\r\n                                onChange={props.handleInputChange}\r\n                                value={props.state.user_email}\r\n                                required />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-row px-1\">\r\n                        <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.onCancelButton }>Отмена</button>\r\n                        <button type=\"submit\" className={\"btn btn-primary\" + ( email_valid?\"\":\" disabled\")}>\r\n                            Создать\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nfunction ProjectDescription (props) {\r\n    const editing = props.state.editing;\r\n    return (\r\n        <div className=\"border border-light shadow-lg rounded-lg bg-white mt-4 p-4\">\r\n            { editing !== 'name' &&\r\n                <span className='d-flex justify-content-between'>\r\n                    <h1 className=\"display-4 text-break\">{props.state.name}</h1>\r\n                    { !getMe().is_admin ||  props.state.folders_num > 0 ||\r\n                        <button className='close' disabled={ props.state.is_deleting || !props.state.is_loaded }>\r\n                            <img src='img/edit.svg' \r\n                                className='align-self-start mt-4 ml-3' \r\n                                onClick={ props.state.is_deleting ? ()=>{} : props.clb.onEditNameButton } \r\n                                alt='edit'/>\r\n                        </button>\r\n                    }\r\n                </span>\r\n            }\r\n            { editing === 'name' && \r\n                <form className=\"form-inline mb-4\" onSubmit={ props.clb.onNameChangeButton } autoComplete=\"off\">\r\n                    <div className=\"form-group flex-grow-1\">\r\n                        <input type=\"text\" \r\n                            className=\"form-control w-100 mr-2\" \r\n                            id=\"nameEdit\" \r\n                            autoFocus={true} \r\n                            onChange={props.clb.handleInputChange}\r\n                            value={ props.state.nameEdit }/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.clb.onCancelButton }>Отмена</button>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Изменить</button>\r\n                    </div>\r\n                </form>\r\n            }\r\n            { editing !== 'description' &&                    \r\n                <span className='d-flex justify-content-between'>\r\n                    <p className=\"lead text-break\">{props.state.description}</p>\r\n                    { !getMe().is_admin ||\r\n                        <button className='close' disabled={ props.state.is_deleting || !props.state.is_loaded }>\r\n                            <img src='img/edit.svg' \r\n                                className='align-self-start mt-3 ml-3' \r\n                                onClick={ props.state.is_deleting ? ()=>{} : props.clb.onEditDescButton }  \r\n                                alt='edit'/>\r\n                        </button>\r\n                    }\r\n                </span>\r\n            }\r\n            { editing === 'description' && \r\n                <form className=\"form form mb-4\" onSubmit={ props.clb.onDescChangeButton } autoComplete=\"off\">\r\n                    <div className=\"form-group flex-grow-1 mr-sm-4\">\r\n                        <textarea className=\"form-control w-100\" \r\n                            id=\"descEdit\"\r\n                            rows=\"5\"\r\n                            autoFocus={true} \r\n                            onChange={props.clb.handleInputChange}\r\n                            value={props.state.descEdit}/>\r\n                    </div>\r\n                    <div>\r\n                        <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.clb.onCancelButton }>Отмена</button>\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Изменить</button>\r\n                    </div>\r\n                </form>\r\n            }                    \r\n            <hr className=\"my-4\"/>\r\n            { !props.state.is_loaded ||\r\n                <p>Создан <strong><TimeAgo date={props.state.created} formatter={formatter}/></strong><br />\r\n                Содержит <strong>{props.state.folders_num} папки</strong>, <strong>{props.state.files_num} файла(ов)</strong>.</p>\r\n            }\r\n            { props.state.folders_num > 0 || !props.state.is_loaded || !getMe().is_admin ||\r\n                <button className=\"btn btn-danger btn-lg\" \r\n                disabled={ props.state.is_deleting } \r\n                onClick={ props.clb.onDeleteProject } >\r\n                    Удалить проект\r\n                </button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default class Project extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            is_loaded:   false,\r\n            editing:     'none',\r\n            name:        '',\r\n            description: '',\r\n            participants: new Set(), // id's of selected users\r\n            users:        [],        // все пользователи сервиса\r\n            moved_user:   '',        // id перемещенного пользвателся (для анимации)\r\n            is_deleting:  false,     // отослан запрос на удаление проекта\r\n            is_deleted:   false,     // пришел ответ, что проект удален\r\n        };\r\n\r\n        this.handleInputChange     = this.handleInputChange.bind(this);\r\n        this.onEditNameButton      = this.onEditNameButton.bind(this);\r\n        this.onNameChangeButton    = this.onNameChangeButton.bind(this);\r\n        this.onEditDescButton      = this.onEditDescButton.bind(this);\r\n        this.onDescChangeButton    = this.onDescChangeButton.bind(this);\r\n        this.onCancelButton        = this.onCancelButton.bind(this);\r\n        this.onAddUser             = this.onAddUser.bind(this);\r\n        this.onDeleteUser          = this.onDeleteUser.bind(this);\r\n        this.onNewUserButton       = this.onNewUserButton.bind(this);\r\n        this.onCreateUserButton    = this.onCreateUserButton.bind(this);\r\n        this.onProjectLoaded       = this.onProjectLoaded.bind(this);\r\n        this.onUserCreated         = this.onUserCreated.bind(this);\r\n        this.onDeleteProject       = this.onDeleteProject.bind(this);\r\n    }\r\n\r\n    onProjectLoaded(json) {\r\n        let newstate = json;\r\n        if ( 'users' in json ){\r\n            newstate.participants = new Set(json.users);\r\n            delete newstate.users;\r\n        }\r\n        newstate.is_loaded = true; // информация наконец загружена\r\n        this.setState( newstate );\r\n    }\r\n\r\n    componentWillMount() {\r\n        if ( isAuthenticated() ){\r\n            API.getProject( this.onProjectLoaded, this.props.match.params.id );\r\n            if ( getMe().is_admin )\r\n                API.getUsersList( (json) => { this.setState( { users: json }); } );\r\n        }\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        this.setState({ [target.id]: target.value });\r\n    }\r\n\r\n    onEditNameButton (event) {\r\n        this.setState( { editing: 'name', nameEdit: this.state.name });\r\n    }\r\n\r\n    onNameChangeButton (event) {\r\n        API.updateProject(this.onProjectLoaded, this.props.match.params.id, this.state.nameEdit, this.state.description );\r\n        this.setState( { editing: 'none' });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onEditDescButton (event) {\r\n        this.setState( { editing: 'description', descEdit: this.state.description });\r\n    }\r\n\r\n    onDescChangeButton (event) {\r\n        API.updateProject(this.onProjectLoaded, this.props.match.params.id, this.state.name, this.state.descEdit );\r\n        this.setState( { editing: 'none' });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onNewUserButton (event) {\r\n        this.setState( { editing: 'user', user_name: '', user_email: '' });\r\n    }\r\n\r\n    onCancelButton (event) {\r\n        this.setState( { editing: 'none' });\r\n    }\r\n\r\n    onAddUser (event) {\r\n        let sel = this.state.participants;\r\n        sel.add(event.target.id);\r\n        API.updateUserProjects(()=>{}, event.target.id, this.props.match.params.id, 'add');\r\n        this.setState( { editing: 'none', participants: sel, moved_user: event.target.id });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDeleteUser (event) {\r\n        let sel = this.state.participants;\r\n        sel.delete(event.target.id);\r\n        API.updateUserProjects(()=>{}, event.target.id, this.props.match.params.id, 'delete');\r\n        this.setState( { editing: 'none', participants: sel, moved_user: event.target.id });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onUserCreated (json) {\r\n        let new_users = this.state.users;\r\n        let sel = this.state.participants;\r\n\r\n        new_users.push(json);\r\n        sel.add(json.id);\r\n\r\n        this.setState( { \r\n            participants: sel,\r\n            users: new_users,\r\n            moved_user: json.id,\r\n            editing: 'none',\r\n        });\r\n    }\r\n\r\n    onCreateUserButton (event) {\r\n        API.addUser(this.onUserCreated, this.state.user_name,  this.state.user_email.trim(), this.props.match.params.id );\r\n        this.setState( { editing: 'none', });\r\n        event.preventDefault();\r\n    }\r\n\r\n    onDeleteProject (event) {\r\n        API.deleteProject(()=>{ this.setState( { is_deleted: true }); }, this.props.match.params.id);\r\n        this.setState( { editing: 'none', is_deleting: true });\r\n        event.preventDefault();\r\n    }\r\n\r\n    render () {\r\n        // неавторизованных пользователей перенаправляем на страницу логина\r\n        if ( !isAuthenticated() )\r\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\r\n\r\n        // после удаление проекта переходим к списку проектов снова\r\n        if ( this.state.is_deleted )\r\n            return (<Redirect to='/' />);\r\n\r\n\r\n        // составляем два списка пользователей\r\n        let participants = [];\r\n        let others = [];\r\n\r\n        for (let i in this.state.users){\r\n            const p = this.state.users[i];\r\n            const animated = (p.id === this.state.moved_user);\r\n\r\n            if ( p.is_admin ) {\r\n                // игнорируем, у админов есть доступ везде\r\n            }\r\n            else if (this.state.participants.has(this.state.users[i].id))\r\n                participants.push(<User icon='delete' user={p} key={p.id} func={this.onDeleteUser} animated={animated}/>);\r\n            else\r\n                others.push(<User icon='add' user={p} key={p.id} func={this.onAddUser} animated={animated}/>);\r\n        }\r\n        \r\n        return ([\r\n            <Navbar key='navbar' />,\r\n            <Breadcrumbs key='breadcrumbs' name = {this.state.name}/>,            \r\n            <main key='body' role=\"main\" className=\"container\">\r\n                <ProjectDescription state= {this.state} clb={this} />\r\n                { !this.state.is_loaded || this.state.is_deleting || !getMe().is_admin ||\r\n                    <div className='d-flex flex-column flex-lg-row'>\r\n                        <div className='flex-fill my-4 mr-lg-4'>\r\n                            <h2 className='ml-3'>Участники проекта:</h2>\r\n                            <ul className=\"list-group shadow-lg\">\r\n                                {participants}\r\n                                <NewUser state={this.state}\r\n                                    handleInputChange={this.handleInputChange}\r\n                                    onNewUserButton={this.onNewUserButton}\r\n                                    onCreateUserButton={this.onCreateUserButton}\r\n                                    onCancelButton={this.onCancelButton} />\r\n                            </ul>\r\n                        </div>\r\n                        <div className='flex-fill my-4 ml-lg-4'>\r\n                            <h2 className='ml-3'>Остальные пользователи:</h2>\r\n                            <ul className=\"list-group shadow-lg\">\r\n                                {others}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </main>\r\n        ]);\r\n    }\r\n}\r\n","import React     from 'react';\r\nimport ReactDOM  from 'react-dom';\r\n\r\nimport App       from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","import React                              from 'react';\r\nimport { HashRouter as Router, Route }    from 'react-router-dom';\r\nimport Projects                           from './ProjectsList'\r\nimport Folder                             from './Folder';\r\nimport User                               from './User';\r\nimport NewProject                         from './NewProject';\r\nimport Project                            from './Project';\r\nimport { Login, Logout }                  from './Login'\r\nimport Alert                              from './Alert';\r\n\r\nexport default function App(props){\r\n    // ну а пока суть да дело - рисуем что можем\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Route exact path=\"/\" component={Projects} />\r\n                <Route path=\"/login\" component={Login} />\r\n                <Route path=\"/access_token=:hash\" component={Login} />\r\n                <Route path=\"/logout\" component={Logout} />\r\n                <Route path=\"/new_project\" component={NewProject} />\r\n                <Route path=\"/folder/:id\" render={ (props) => <Folder {...props}/> } />\r\n                <Route path=\"/project/:id\" render={ (props) => <Project {...props}/> } />\r\n                <Route path=\"/user/:id\" render={ (props) => <User {...props}/> } />\r\n                <Alert />\r\n            </div>\r\n        </Router>\r\n    );\r\n}"],"sourceRoot":""}