{"version":3,"sources":["Avatar.js","Alert.js","server_api.js","Login.js","Navbar.js","ProjectWithFolders.js","ProjectsList.js","FileDropzone.js","File.js","TimeLeft.js","FolderStats.js","Breadcrumbs.js","Folder.js","User.js","NewProject.js","Project.js","index.js","App.js"],"names":["Avatar","props","url","crypto","createHash","update","email","trim","toLocaleLowerCase","digest","size","undefined","cls","className","react_default","a","createElement","src","height","alt","errorHandler","setAlert","msg","console","log","Alert","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","errormsg","setMsg","bind","assertThisInitialized","setState","role","Component","server_URL","test","window","location","origin","fetchStatusCheck","response","status","json","Promise","reject","statusText","onError","text","message","server_api","getProjectsList","func","fetch","method","headers","content-type","Authorization","getToken","then","catch","getProject","proj_id","addProject","name","description","body","JSON","stringify","updateProject","id","deleteProject","addFolder","project_id","folder_name","project","deleteFolder","folder_id","getFolder","getUsersList","addUser","updateUserProjects","user_id","action","updateUserName","getMe","getUser","deleteUser","uploadFile","file","onProgress","onDone","req","XMLHttpRequest","responseType","upload","addEventListener","event","lengthComputable","loaded","total","onload","resonse","formData","FormData","append","open","setRequestHeader","send","fileDownloadURL","file_id","token","accessToken","idToken","me","expiresAt","LOGIN_URL","pathname","CLIENT_ID","auth","auth0","WebAuth","domain","clientID","redirectUri","scope","loggedIn","authResult","expiresIn","Date","getTime","localStorage","setItem","isAuthenticated","checkSession","err","Login","_Component","logged_in","restoring_session","return_to","inputEmail","inputCode","wrong_email","code_sent","from","was_logged_before","getItem","removeItem","API","match","params","hash","parseHash","handleInputChange","performLogIn","inherits","createClass","key","value","_this$setState","target","defineProperty","_this2","passwordlessStart","connection","res","passwordlessLogin","verificationCode","preventDefault","no_user","react_router","to","onSubmit","width","type","placeholder","onChange","autoFocus","href","onClick","authorize","Logout","logout","returnTo","MenuItem","where","react_router_dom","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","render","p","is_admin","formatter","buildFormatter","ruStrings","Folder","empty","files_num","icon","animated","animate","lib_default","date","updated","callback","NewFolder","autoComplete","onAdd","htmlFor","maxLength","onEdit","length","disabled","onCancel","ProjectName","new_folder","ProjectWithFolders","new_folder_name","onNewFolder","onButtonCancel","onButtonAdd","onButtonDelete","folderAdded","folderDeleted","folder","folders","i","splice","unshift","push","sorted","sort","b","FoldersArray","f","ProjectsList","projects","loading","map","prj","src_ProjectWithFolders_0","FileDropzone","hightlight","fileInputRef","React","createRef","openFileDialog","onFilesAdded","onDragOver","onDragLeave","onDrop","current","click","evt","files","array","item","dataTransfer","children","style","cursor","ref","multiple","File","queued","index","FileQueued","uploading","progress","Math","round","FileUploading","error","error_text","FileError","download","filesize","uploaded","user","FileNormal","Seconds","x","Minutes","FolderStats","stats","uploaded_so_far","percentage","time_left","uploading_now","total_to_upload","toFixed","upload_started","mseq","fsecs","fhours","fmins","hours","floor","mins","secs","TimeLeft","total_uploaded","Breadcrumbs","parent_id","parent_name","aria-current","onCancelFile","onFileUpoaded","onUploadProgress","onUploadError","onFileListLoaded","new_files","added_size","duplicate","j","old_state","concat","rollQueue","uploads","next","to_upload","abort","copy","FileDropzone_FileDropzone","UserDescription","editing","projs","project_names","is_loaded","is_deleting","clb","onEditNameButton","onNameChangeButton","nameEdit","onCancelButton","onDeleteUser","User","is_deleted","cached_id","loadUserInfo","_this3","updateMe","_this4","NewProject","processing","processed","onCreate","onCreated","required","rows","NewUser","email_valid","e","m","emailIsValid","user_email","onNewUserButton","onCreateUserButton","user_name","ProjectDescription","folders_num","onEditDescButton","onDescChangeButton","descEdit","created","onDeleteProject","Project","participants","Set","users","moved_user","onAddUser","onProjectLoaded","onUserCreated","newstate","sel","add","delete","new_users","others","has","Project_User","ReactDOM","exact","path","component","Projects","Folder_Folder","Project_Project","User_User","Alert_Alert","document","getElementById"],"mappings":"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","file":"static/js/main.e396597e.chunk.js","sourcesContent":["import React    from 'react';\nimport crypto   from 'crypto';\n\nexport default function Avatar(props) {\n    const md5 = crypto.createHash('md5').update(props.email.trim().toLocaleLowerCase()).digest('hex');\n    const url = 'https://www.gravatar.com/avatar/' + md5  + '?d=identicon';\n    const size = ( props.size === undefined ) ? '30px' : props.size+'px';\n    const cls = props.className || '';\n    return (<img src={url} height={size} alt='avatar' className={'rounded-circle '+cls} />);\n} ","import React, { Component } from 'react';\n\n// пока пустой указатель, инициализируем позже, когда создатся экземпляр реакт-класса\nlet errorHandler = null;\n\n// Обновляем состояние баннера на новый текст ошибки\nexport function setAlert (msg){\n    if (errorHandler === null)\n    {\n        if( msg !== null )\n            return console.log(\"Error: setAlert() called before instantiating <Alert />, ignored. Message: \", msg);\n        else\n            return;\n    }\n    errorHandler(msg);\n}\n\n// класс показывает баннер с ошибкой, если она установлена не в null\nexport default class Alert extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { errormsg: null };\n\n        if ( errorHandler !== null )\n            console.log(\"Warning: there can be only one instance of <Alert /> in application.\");\n        errorHandler = this.setMsg.bind(this);\n    }\n\n    componentWillUnmount() {\n        errorHandler = null;\n    }    \n\n    setMsg(msg) {\n        this.setState({ errormsg: msg });\n    }\n\n    render () {\n        if (this.state.errormsg === null)\n            return ('');\n        else\n            return (<aside className=\"fixed-bottom bg-danger border border-white text-white p-2\" role=\"alert\"> {this.state.errormsg} </aside>);\n    }\n}\n","import { setAlert } from './Alert';\nimport { getToken } from './Login';\n\n// автоматически определяем куда коннектится в зависимости от того, \n// в проде мы или на локальной машине\nconst server_URL = /localhost/.test(window.location.origin) ? \n                        'http://localhost:8000' :  // сервер на локальной машине\n                        'https://tomater.synology.me:8000'; // NAS, опубликованный в интернет\n\n\n// стандартная функция обработки статуса ответа сервера\nfunction fetchStatusCheck(response){\n    switch (response.status) {\n        case 200:\n            return (response.json());\n        case 401:\n            // проблема с токеном аутентификации - надо идти снова к странице логина\n            return Promise.reject(\"Error 401: Token is not correct.\");\n        default:\n            return Promise.reject('Server reply: '+ response.status + '; ' + response.statusText);\n    }\n}\n\nfunction onError (msg){\n    let text = \"Server-api/onError: unknown type of error...\";\n    if (typeof msg == 'object')\n    {\n        console.log(msg); // TODO.. Remove?\n        text = msg.message; // ошибка от fetch?\n    }\n    else if (typeof msg == 'string'){\n      text = msg;\n    }\n    setAlert(text);\n}\n\nexport default {\n    // получение списка проектов с сервера\n    getProjectsList: (func) => {\n        setAlert(null);\n        return fetch(server_URL + \"/projects\", {\n            method: 'get',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // получение описания проекта с сервера\n    getProject: (func, proj_id) => {\n        setAlert(null);\n        return fetch(server_URL + \"/projects/\" + proj_id, {\n            method: 'get',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // добавить новый проект\n    // {\n    //    name:        string,  // название нового проекта, до 50 символов. Не может быть пустым\n    //    description: string   // описание новго проектаб до 200 символов. Допускается пустое\n    // }\n    // Возвращает описание проекта\n    addProject: (func, name, description) => {\n        setAlert(null);\n        return fetch(server_URL + \"/projects\", {\n            method: 'post',\n            body: JSON.stringify({ name, description }),\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // обновить описание проекта\n    // {\n    //    name:        string,  // новое название проекта, до 50 символов. Не может быть пустым\n    //    description: string   // новое описание проектаб до 200 символов. Допускается пустое\n    // }\n    // Возвращает описание проекта\n    updateProject: (func, id, name, description) => {\n        setAlert(null);\n        return fetch(server_URL + \"/projects/\" + id, {\n            method: 'put',\n            body: JSON.stringify({ name, description }),\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // удалить проект\n    deleteProject: (func, id) => {\n        setAlert(null);\n        return fetch(server_URL + \"/projects/\" + id, {\n            method: 'delete',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },    \n\n    // добавить новый фолдер к проекту\n    // На входе JSON в теле\n    // {\n    //    project: string,  // UUID родительского проекта\n    //    name:    string   // название для новой папки\n    // }    \n    addFolder: (func, project_id, folder_name) => {\n        setAlert(null);\n        return fetch(server_URL + \"/folders\", {\n            method: 'post',\n            body: JSON.stringify({project: project_id, name: folder_name}),\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // удалить пустой фолдер \n    // На входе id\n    // На выходе тот же id, если все успешно\n    deleteFolder: (func, folder_id) => {\n        setAlert(null);\n        return fetch(server_URL + \"/folders/\"+folder_id, {\n            method: 'delete',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then( json => func(json.id) )\n        .catch(onError);\n    },\n\n    // считать папку с файлами\n    // На входе id\n    // На выходе JSON про папку и все ее файлы\n    getFolder: (func, folder_id) => {\n        setAlert(null);\n        return fetch(server_URL + \"/folders/\"+folder_id, {\n            method: 'get',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // получить список всех пользователей\n    // На выходе JSON с массивом\n    getUsersList: (func) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users\", {\n            method: 'get',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // Создать нового пользователя\n    // На входе JSON в теле\n    // {\n    //    name:    string   // имя пользователя (максимум 50 символов)\n    //    email:   string   // email (максимум 50 символов)\n    //    project: string   // uuid проекта, к которому даем права сразу\n    // }\n    // возвращает JSON c описанием нового пользователя\n    addUser: (func, name, email, project ) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users\", {\n            method: 'post',\n            body: JSON.stringify({name, email, project}),\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n\n    // обновление информации о пользователе - пока только доступные проекты\n    // позже, возможно, профиль\n    // На входе JSON в теле\n    // {\n    //    project: string               // uuid проекта, к которому даем/забираем права сразу\n    //    action:  string (add|delete)  // забрать или добавить прав\n    // }\n    // не возвращаем ничего\n    updateUserProjects: (func, user_id, project, action ) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users/\" + user_id, {\n            method: 'put',\n            body: JSON.stringify({project, action}),\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // обновление информации о пользователе - пока только доступные проекты\n    // позже, возможно, профиль\n    // На входе JSON в теле\n    // {\n    //    name: string               // имя, на которое заменяем старое (максимум 50 символов)\n    // }\n    // не возвращаем ничего\n    updateUserName: (func, user_id, name ) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users/\" + user_id, {\n            method: 'put',\n            body: JSON.stringify({name}),\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // получить информацию о текущем пользователе\n    getMe: (func) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users/me\", {\n            method: 'get',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },\n\n    // получить информацию о текущем пользователе по ID\n    getUser: (func, user_id) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users/\" + user_id, {\n            method: 'get',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },    \n\n    // удалить пользователя\n    deleteUser: (func, user_id) => {\n        setAlert(null);\n        return fetch(server_URL + \"/users/\" + user_id, {\n            method: 'delete',\n            headers: { 'content-type': 'application/json', 'Authorization': 'Bearer ' + getToken() }})\n        .then(fetchStatusCheck)\n        .then(func)\n        .catch(onError);\n    },    \n\n    // загрузить файл на сервер\n    // на входе - \n    //  id родительской папочки\n    //  объект file\n    //     - коллбек для отслеживания прогресса загрузки\n    //     - колбек на окончание загрузки\n    //     - колбек на ошибку загрузки\n    //\n    //  возращает ссылку на риквест (чтобы отменить можно было)\n    uploadFile: (folder_id, file, onProgress, onDone, onError) => {\n        const req = new XMLHttpRequest();\n        req.responseType = 'json';\n\n        req.upload.addEventListener(\"progress\", event => {\n            if (event.lengthComputable)\n                onProgress(file.name, (event.loaded / event.total) * 100);\n        });\n        \n        req.onload = function () {\n            if ( req.resonse === null )\n                onError(file.name, \"Ошибка загрузки\" );\n            else\n                onDone(file.name, req.response); \n        }\n\n        req.upload.addEventListener(\"error\", event => {\n            // пока не удалось найти хоть какие-то признаки,\n            // позвояющие идентифицировать ошибку \n            // возможные причины - сервер не отвечает, это не файл, а папка, к файлу нет доступа\n            onError(file.name, \"Ошибка загрузки\" );\n        });\n    \n        const formData = new FormData();\n        formData.append(\"file\", file, file.name);\n        formData.append(\"folder\", folder_id);\n    \n        req.open(\"POST\", server_URL + \"/files\");\n        req.setRequestHeader('Authorization', 'Bearer ' + getToken() );\n        req.send(formData);\n\n        return req;\n    },\n\n    // правльная ссылка на скачивание файла\n    fileDownloadURL: (file_id, token) => {\n        return (server_URL + '/files/' + file_id + '?token=' + token);\n    }\n};\n\n","import React, { Component } from 'react';\nimport { Redirect }         from \"react-router-dom\";\nimport auth0                from 'auth0-js';\nimport API                  from './server_api'\n\nimport './Login.css'\n\nlet accessToken = null;\nlet idToken     = null;\nlet me          = null;\nlet expiresAt   = 0;\n\nconst LOGIN_URL   = window.location.origin +  window.location.pathname;\nconst CLIENT_ID   = '7b4QizTZk0ptdfV5X3mcseQZJ0vLzJbB'; // API APP\nconst AUTH_DOMAIN = 'nodelfilms.eu.auth0.com';\n\nconst auth = new auth0.WebAuth({\n    domain:         AUTH_DOMAIN,\n    clientID:       CLIENT_ID,\n    redirectUri:    LOGIN_URL,\n    responseType:   'token id_token',\n    scope:          'openid profile email'\n});\n\nfunction loggedIn (authResult) {\n    // сохраняем данные из токена\n    expiresAt   = (authResult.expiresIn * 1000) + new Date().getTime();\n    accessToken = authResult.accessToken;\n    idToken     = authResult.idToken;\n    // Set isLoggedIn flag in localStorage\n    localStorage.setItem('isLoggedIn', 'true');\n}\n\nexport function getToken(){\n    return idToken;\n}\n\nexport function getMe(){\n    return me;\n}\n\nexport function updateMe(json){\n    me=json;\n}\n\nexport function isAuthenticated () {\n    if ( accessToken === null || me === null ) {\n        return false;\n    }\n    else {\n        const now = new Date().getTime();\n        // через 10 минут устареет? надо бы обновить. Обычно они на два часа выдаются\n        if ( now + 10*60*1000 >= expiresAt ) {\n            auth.checkSession({}, (err, authResult) => {\n                if (authResult && authResult.accessToken && authResult.idToken)\n                    loggedIn(authResult);\n            });\n        } \n        // пока считаем, что все норм, токен есть и он не очень старый, либо вот-вот обновится\n        return true;\n    }\n}\n\nexport class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            logged_in:   isAuthenticated(), // есть ли уже токен доступа к серверу и  информация о пользователе ?\n\n            restoring_session: false,       // на время восстановления старой сессии не будем ничего рисовать на экране, чтобы не мелькало\n            return_to:   { pathname: '/' }, // куда вернемся после восстановления сессии - если не было сюда явного редиректа - вернемся в корень\n\n            inputEmail:  '',                // поля ввода в форме\n            inputCode:   '',\n\n            wrong_email: false,             // состояния UI\n            code_sent:   false,\n        };\n\n        // запоминаем, откуда нас сюда заредиректили, чтобы потом вернуться\n        if ( this.props.location.state !== undefined )\n            this.state.return_to =  this.props.location.state.from;\n\n        // может быть не аутентифицированы сейчас, но были при прошлом посещении страницы?\n        let was_logged_before = localStorage.getItem('isLoggedIn');\n        if ( accessToken === null &&  was_logged_before ) {\n            // флаг, предотвращающий мелькание экрана\n            this.state.restoring_session = true;\n            // на случай ошибки сбрасываем флаг наличия сессии, чтобы не было бесконечного цикла\n            localStorage.removeItem('isLoggedIn');\n            // пытаемся восстановить токен с сервера \n            auth.checkSession({}, (err, authResult) => {\n                if (authResult && authResult.accessToken && authResult.idToken) {\n                    loggedIn(authResult);\n                    API.getMe((json) => {\n                        me = json;\n                        this.setState({ logged_in: true })\n                    });\n                }\n                else\n                    // попытка залогиниться не прошла, рисуем форму логина\n                    this.setState({ restoring_session: false })\n            });\n        }\n\n        // странная ситуация - есть токен, но не загружена информация о себе - загружаем\n        if ( accessToken !== null && me === null ) {\n            API.getMe((json) => {\n                me = json;\n                this.setState({ logged_in: true })\n            });\n        }\n\n        // Вариант для HashRouter - обрабатываем callback от Auth0 с токеном в URL\n        if ( props.match.params.hash !== undefined ){\n            // флаг, предотвращающий мелькание экрана\n            this.state.restoring_session = true;\n            auth.parseHash( \n                { hash: '#access_token=' + props.match.params.hash },\n                (err, authResult) => {\n                    if ( authResult && authResult.accessToken && authResult.idToken ) {\n                        loggedIn(authResult);\n                        API.getMe((json) => {\n                            me = json;\n                            this.setState({ logged_in: true })\n                        });\n                    }\n                    else \n                        // попытка залогиниться не прошла, рисуем форму логина\n                        this.setState({ restoring_session: false })\n                }\n            );\n        }\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.performLogIn      = this.performLogIn.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        this.setState({ [target.id]: target.value, wrong_email: false });\n    }\n\n    performLogIn(event){\n        if ( this.state.code_sent === false ){ \n            auth.passwordlessStart({ \n                connection: 'email', \n                send: 'code', \n                email: this.state.inputEmail,\n            }, (err,res) => {\n                if ( err !== null )\n                    this.setState ({ code_sent: false, wrong_email: true });\n                else \n                    this.setState ({ code_sent: true, wrong_email: false });\n            });\n        }\n        else {\n            auth.passwordlessLogin({ \n                connection: 'email', \n                email: this.state.inputEmail,\n                verificationCode: this.state.inputCode,\n            }, (err,res) => {\n                console.log('err=', err);\n                console.log('res=', res);\n            });\n        }\n        event.preventDefault();\n    }\n    \n    render () {\n        const no_user = this.state.wrong_email;\n\n        if ( this.state.logged_in )\n            return <Redirect to={this.state.return_to} />;\n        else if ( this.state.restoring_session )\n            return <center><h4 className='p-4 text-muted'>Logging in, please wait...</h4></center> ; // не мелькаем экраном на вермя восстановления сессии\n        else\n            return (\n            <main>\n                <form className=\"form-signin text-center my-5\" onSubmit = { this.performLogIn }>\n                    <img className=\"mb-4\" src=\"https://www.nodelfilms.com/assets/icons/nodelfilms-icon.svg\" alt=\"\" width=\"72\" height=\"72\" />\n                    <h1 className=\"h3 mb-3 font-weight-normal\">\n                        Вход только для зарегистрированны пользователей\n                    </h1>\n                    {\n                        this.state.code_sent && \n                        <p className='text-secondary'>\n                            Код подтверждения отправлен на указанную почту. Для входа, введите код в поле ниже:\n                        </p>\n                    }\n                    <div className=\"input-group\">\n                        { this.state.code_sent || \n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">@</span>\n                            </div>\n                        }\n                    <input type= { this.state.code_sent ? 'hidden' : 'email' }\n                           id=\"inputEmail\" \n                           className={no_user ? \"form-control is-invalid\" : \"form-control\"}\n                           placeholder=\"Email\" \n                           value={this.state.inputEmail} \n                           onChange={this.handleInputChange}\n                           autoFocus={true}/>\n                    { no_user &&\n                        <div className=\"invalid-feedback\">\n                            Пользователь не зарегистрирован\n                        </div>\n                    }\n                    </div>\n                    <input type={ this.state.code_sent ? 'number' : 'hidden' }\n                           id=\"inputCode\" \n                           className=\"form-control\" \n                           placeholder=\"Код из письма\" \n                           value={this.state.inputCode} \n                           onChange={this.handleInputChange}\n                           autoFocus={true}/>\n                    <button className=\"btn btn-primary btn-block my-2\" type=\"submit\">\n                        { this.state.code_sent ? ' Проверить код' : ' Получить код для входа' }\n                    </button>\n                    <small>\n                        <a href=\"/\" onClick={ (event)=>{ auth.authorize(); event.preventDefault(); } }>\n                            Вход по паролю\n                        </a>\n                    </small>\n                    <p className=\"mt-5 mb-3 text-muted\">\n                        © 2019, nodelfilms.com\n                    </p>\n                </form>\n            </main> \n        );\n    }    \n}\n\nexport function Logout (props) {\n    if ( accessToken !== null ){\n        // Remove isLoggedIn flag from localStorage\n        me = null;\n        localStorage.removeItem('isLoggedIn');\n        auth.logout( { returnTo: LOGIN_URL, clientID: CLIENT_ID });\n    }\n    // это будет отображено на экране на короткое время, \n    // пока идет запрос к серверу авторизации\n    // потом будет редирект страницу логина\n    return (<center><h4 className='p-4 text-muted'>Logging out, please wait...</h4></center>);\n}","import React           from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport Avatar          from './Avatar';\nimport { getMe }       from './Login';\n\nfunction MenuItem (props) {\n    if (props.where === props.to){\n        return (\n            <li className=\"nav-item active\">\n                <div className=\"nav-link\">{props.text}</div>\n            </li>\n        );\n    }\n    else {\n        return (\n            <li className=\"nav-item\">\n                <Link className=\"nav-link\" to={props.to}>{props.text}</Link>\n            </li>\n        );\n    }\n}\n\nexport default function Navbar(props) {\n    const me = ( props.me !== undefined ) ? props.me : getMe();\n    return (\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                <ul className=\"navbar-nav\">\n                    <Route render={ (p)=> <MenuItem where={p.location.pathname} text=\"Начало\" to=\"/\" /> } />\n                    { me.is_admin && \n                        <Route render={ (p)=> <MenuItem where={p.location.pathname} text=\"Новый проект\" to=\"/new_project\"  /> } /> }\n                    <Route render={ (p)=> <MenuItem where={p.location.pathname} text=\"Выйти\" to=\"/logout\"  /> } />\n                </ul>\n            </div>\n            <li className=\"navbar-text dropdown\">\n                <Avatar email={me.email} size='30' />\n                <span className='ml-2'><Link to={'/user/'+me.id} className='text-white-50'>{me.name}</Link></span>\n            </li>\n        </nav>\n    );\n}\n","import React, { Component } from 'react';\nimport { Link }             from 'react-router-dom';\n\nimport TimeAgo              from 'react-timeago';\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\n\nimport API                  from './server_api'\n\nimport './ProjectWithFolders.css';\n\nconst formatter = buildFormatter(ruStrings);\n\nfunction Folder(props) {\n    const empty = (props.files_num === 0);\n    const icon = empty ? \"img/folder-empty.svg\" : \"img/folder.svg\";\n    const animated = (props.animate===true) ? \"folder-animated \" : \"\";\n    return (\n        <div className={ animated + \"list-group-item\" } key={props.id}>\n            <div className=\"d-flex w-100 justify-content-between\">\n                <div className=\"media\">\n                    <Link to={\"/folder/\"+props.id} className=\"align-self-center\">\n                        <img src={icon} className=\"mr-3\" height=\"66\" alt=\"folder\" />\n                    </Link>\n                    <div className=\"media-body\">\n                        <Link to={\"/folder/\"+props.id} className='text-dark'>\n                            <h4 className=\"mt-0 mb-0 text-break\">{props.name}</h4>\n                        </Link>\n                        <small>\n                        { empty ? \n                            <p className=\"mb-0 text-secondary\">Нет файлов</p> :\n                            <p className=\"mb-0 text-secondary\">Файлов: {props.files_num}</p> \n                        } \n                        <p className=\"mb-0 text-secondary\">\n                            <TimeAgo date={props.updated} formatter={formatter} />\n                        </p>\n                        </small>\n                    </div>\n                </div>\n                { empty && <button type=\"button\" className=\"close\" onClick={props.callback} id={props.id}>&times;</button> }\n            </div>\n        </div>\n    );\n}\n\nfunction NewFolder(props) {\n    return (\n        <form className=\"form-inline mt-3\" autoComplete=\"off\" onSubmit={props.onAdd}>\n            <label className=\"sr-only\" htmlFor=\"folderName\">Name</label>\n            <input type=\"text\" maxLength=\"50\" className=\"form-control mb-2 mr-sm-2\" id=\"folderName\" \n                placeholder=\"Название папки\" onChange={props.onEdit} value={props.text}/>\n            { props.text.length >  0 ?\n                <button type=\"submit\" className=\"btn btn-primary btn-sm mb-2 mr-2\">Создать</button> :\n                <button type=\"submit\" className=\"btn btn-primary btn-sm mb-2 mr-2\" disabled>Создать</button>\n            }\n            <button className=\"btn btn-primary btn-sm mb-2\" onClick={props.onCancel}>Отмена</button>\n        </form>        \n    );\n}\n\nfunction ProjectName(props) {\n    return (\n        <div>\n            <div className=\"row mt-3\">\n                <div className=\"col-sm-8 mx-1\">\n                    <Link to={ '/project/' + props.id } className='text-dark mb-0'>\n                        <h2> {props.name}</h2>\n                    </Link>\n                </div>\n                <div className=\"col-sm mx-1 pt-sm-2 text-sm-right\">\n                    <small className=\"text-muted\"><TimeAgo date={props.updated} formatter={formatter}/></small>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col mx-1\">\n                    <p className=\"mb-0\">{props.description}</p>\n                </div>        \n            </div>\n            <div className=\"row\">\n                <div className=\"col mx-1\">\n                    { props.new_folder || <a href=\"/#\" onClick={props.onClick}><small>Добавить папку »</small></a> }\n                </div>        \n            </div>\n        </div>\n    );\n}\n\n\nclass ProjectWithFolders extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state              = props.project;\n        this.state.new_folder   = false;\n        this.state.new_folder_name = '';\n\n        this.onNewFolder        = this.onNewFolder.bind(this);\n        this.onCancel           = this.onButtonCancel.bind(this);\n        this.onAdd              = this.onButtonAdd.bind(this);\n        this.handleInputChange  = this.handleInputChange.bind(this);\n        this.onButtonAdd        = this.onButtonAdd.bind(this);\n        this.onButtonDelete     = this.onButtonDelete.bind(this);\n        this.onButtonCancel     = this.onButtonCancel.bind(this);\n        this.folderAdded        = this.folderAdded.bind(this);\n        this.folderDeleted      = this.folderDeleted.bind(this);\n    }\n\n    onNewFolder(event){\n        event.preventDefault();\n        this.setState({ new_folder: true, new_folder_name: '' });\n    }\n\n    onButtonAdd(event){\n        event.preventDefault();\n        this.setState({ new_folder: false });\n        API.addFolder(this.folderAdded, this.state.id, this.state.new_folder_name);\n    }\n\n    onButtonCancel(event){\n        event.preventDefault();\n        this.setState({ new_folder: false });\n    }\n\n    onButtonDelete(event){\n        event.preventDefault();\n        API.deleteFolder(this.folderDeleted, event.target.id);\n    }\n\n    folderAdded(folder){\n        let folders = this.state.folders;\n        // если создаем папку с дублирующимся имеем, сервер не создаст новую папку,\n        // а вернет уже существующую с тем же именем. проверяем уникальность\n        for (let i=0; i<folders.length; i++){\n            folders[i].animate = false;\n            if ( folders[i].id === folder.id ){\n                // удаляем, чтобы затем добавить на вершину списка\n                folders.splice(i,1);\n                i--;\n            }\n        }\n        // эту папочку нужно красиво появить на экране\n        folder.animate = true;\n        folders.unshift(folder);\n        this.setState({ folders: folders });\n    }\n\n    folderDeleted(id){\n        let folders = [];\n        // сохраняем все, кроме удаленной папки\n        for (let i in this.state.folders)\n            if ( this.state.folders[i].id !== id )\n                folders.push(this.state.folders[i]);\n        this.setState({ folders: folders });\n    }\n\n    handleInputChange(event) {\n        switch (event.target.id){\n            case 'folderName':\n                this.setState({ new_folder_name: event.target.value});\n                break;\n            default:\n        }\n    }    \n \n    render() {\n        // строим массив фолдеров\n        const sorted = this.state.folders.sort( (a,b)=>{ return new Date(b.updated)-new Date(a.updated);} );\n        const FoldersArray=[];\n        for (let i in sorted ){\n            // добавляем сслыку на колбэк\n            let f = sorted[i];\n            f.callback = this.onButtonDelete;\n            FoldersArray.push(Folder(f));\n        }\n        // рендерим\n        return (\n            <div className=\"mb-4\">\n                <ProjectName \n                    id={this.state.id} \n                    name={this.state.name} \n                    updated={this.state.updated} \n                    onClick={this.onNewFolder} \n                    new_folder={this.state.new_folder}/>\n                    \n                { this.state.new_folder && <NewFolder \n                    onAdd={this.onButtonAdd} \n                    onCancel={this.onButtonCancel} \n                    onEdit={this.handleInputChange} \n                    text={this.state.new_folder_name}/> }\n\n                <div className=\"list-group shadow mt-3\">\n                    {FoldersArray}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ProjectWithFolders;\n","import React, { Component } from 'react';\nimport { Redirect }         from \"react-router-dom\";\n\nimport Navbar               from './Navbar';\nimport Project              from './ProjectWithFolders'\nimport API                  from './server_api'\nimport { isAuthenticated }  from './Login'\n\n\n// выводим подряд все проекты\nexport default class ProjectsList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            projects: null,\n            loading:  true,  // пока еще загружаем список проектов\n        };\n    }\n    \n    componentWillMount() {\n        // Теперь время загрузить список проектов с сервера\n        if ( isAuthenticated() )\n            API.getProjectsList( (json)=>{this.setState({ projects: json, loading: false });} );\n    }\n\n    render () {\n        // неавторизованных пользователей перенаправляем на страницу логина\n        if ( !isAuthenticated() )\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\n\n        let projects = [];\n        if ( this.state.projects !== null )\n            projects = this.state.projects.map( prj => { return <Project project={prj} key={prj.id}/>; } );\n\n        return ([\n            <Navbar key='navbar' />,\n            <main key='body' role=\"main\" className=\"container\">\n                {projects}\n                { this.state.loading || projects.length > 0 ||\n                    <center className=\"p-4\">\n                        <img className=\"m-4\" src=\"http://nodelfilms.com/assets/icons/nodelfilms-icon.svg\" alt=\"\" width=\"72\" height=\"72\" />\n                        <h3 >Вы сейчас не участвуете ни в одном из проектов.</h3>\n                        <p>Если это не так, то свяжитесь с нами, чтобы мы настроили Вам права доступа.</p>\n                    </center>                \n                }\n            </main>\n        ]);\n    }\n}\n","import React, { Component } from 'react';\n\nimport './FileDropzone.css';\n\nexport default class FileDropzone extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { hightlight: \"\" };\n        this.fileInputRef = React.createRef();\n\n        this.openFileDialog = this.openFileDialog.bind(this);\n        this.onFilesAdded   = this.onFilesAdded.bind(this);\n        this.onDragOver     = this.onDragOver.bind(this);\n        this.onDragLeave    = this.onDragLeave.bind(this);\n        this.onDrop         = this.onDrop.bind(this);\n    }\n\n    openFileDialog() {\n        this.fileInputRef.current.click();\n    }\n\n    onFilesAdded(evt) {\n        // преобразуем список в обычный массив\n        const files = evt.target.files;\n        let array =[];\n        for (var i = 0; i < files.length; i++)\n            array.push(files.item(i));\n        // вызываем колбек\n        if (this.props.onFilesAdded)\n            this.props.onFilesAdded(array);\n    }\n\n    onDrop(event) {\n        event.preventDefault();\n        // преобразуем список в обычный массив\n        const files = event.dataTransfer.files;\n        let array =[];\n        for (var i = 0; i < files.length; i++)\n            array.push(files.item(i));\n        // вызываем колбек\n        if (this.props.onFilesAdded)\n            this.props.onFilesAdded(array);\n        this.setState({ hightlight: \"\" });\n    }\n\n    onDragOver(evt) {\n        evt.preventDefault();\n        this.setState({ hightlight: \"ZoneHighlight\" });\n    }\n\n    onDragLeave() {\n        this.setState({ hightlight: \"\" });\n    }\n  \n    render() {\n        return (\n            <div className={\"p-1 \" + this.state.hightlight } \n                onDragOver={this.onDragOver} \n                onDragLeave={this.onDragLeave} \n                onDrop={this.onDrop} >\n\n                {this.props.children}\n                \n                <div className=\"d-flex w-100 flex-column align-items-center my-4 p-4 Dropzone\">\n\n                    <img src=\"img/cloud-upload.svg\" \n                        alt=\"upload\" \n                        height=\"150\" \n                        onClick={this.openFileDialog} \n                        style={{ cursor: \"pointer\" }} />\n                    \n                    <input ref={this.fileInputRef} \n                        className=\"InvisibleFileInput\" \n                        type=\"file\" multiple \n                        onChange={this.onFilesAdded} />\n                    \n                    <button type=\"button\" \n                        className=\"btn btn-secondary btn-lg mb-3\" \n                        onClick={this.openFileDialog}>Загрузите файлы</button>\n                    \n                    <center><p>Или перетащите файлы сюда для закачки</p></center>\n                </div>\n            </div>\n        );\n    }\n}","import React    from 'react';\nimport filesize from 'filesize'\n\nimport TimeAgo              from 'react-timeago';\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\n\nimport API                  from './server_api'\n\nconst formatter = buildFormatter(ruStrings);\n\n\nfunction FileUploading(props) {\n    return (\n        <div className=\"d-flex w-100\">\n            <div className=\"align-self-center mx-3\">\n                <img src=\"img/cloud-upload-gray.svg\" height=\"50\" alt=\"upload\" />\n            </div>\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\n                <h4 className=\"text-dark my-0 mr-3 text-break text-muted\">\n                    {props.name}\n                </h4>\n                <div className=\"progress flex-grow-1 mr-2\" style={{height: \"22px\"}}>\n                    <div className=\"progress-bar progress-bar-striped progress-bar-animated\" \n                        style={{width: props.progress+\"%\"}}>\n                        {Math.round(props.progress) + \"%\"}\n                    </div>\n                </div>\n            </div>\n            <button type=\"button\" \n                className=\"close mr-2\" \n                onClick={props.callback} \n                id={props.index}>\n                    &times;\n            </button>\n        </div>\n    );\n}\n\nfunction FileQueued(props) {\n    return (\n        <div className=\"d-flex w-100\">\n            <div className=\"align-self-center mx-3\">\n                <img src=\"img/cloud-upload-light.svg\" height=\"50\" alt=\"upload\" />\n            </div>\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\n                <h4 className=\"text-dark my-0 mr-3 text-break text-muted\">\n                    {props.name}\n                </h4>\n                <small className=\"flex-grow-1 mr-2 text-secondary\">\n                    В очереди на загрузку\n                </small>\n            </div>\n            <button type=\"button\" \n                className=\"close mr-2\" \n                onClick={props.callback} \n                id={props.index}>\n                    &times;\n            </button>\n        </div>\n    );\n}\n\n\nfunction FileError(props) {\n    return (\n        <div className=\"d-flex w-100\">\n            <div className=\"align-self-center mx-3\">\n                <img src=\"img/error.svg\" height=\"50\" alt=\"upload\" />\n            </div>\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\n                <h4 className=\"text-dark my-0 mr-3 text-break text-muted\">\n                    {props.name}\n                </h4>\n                <small className=\"flex-grow-1 mr-2 text-secondary\">\n                    {props.error_text}\n                </small>\n            </div>\n            <button type=\"button\" \n                className=\"close mr-2\" \n                onClick={props.callback} \n                id={props.index}>\n                    &times;\n            </button>\n        </div>\n    );\n}\n\n\nfunction FileNormal(props) {\n    return (\n        <div className=\"d-flex w-100\">\n            <a download href={API.fileDownloadURL(props.id, props.token)} className=\"align-self-center mx-3\">\n                <img src=\"img/cloud-download.svg\" height=\"50\" alt=\"download\" />\n            </a>\n            <div className=\"d-flex w-100 flex-column flex-md-row align-items-md-center\">\n                <a download href={API.fileDownloadURL(props.id, props.token)} className=\"flex-grow-1 text-dark\">\n                    <h4 className=\"my-0 mr-2 text-break\">\n                        {props.name}\n                    </h4>\n                </a>\n                <div className=\"d-flex flex-column flex-md-row\">\n                    <small className=\"mx-md-2 mx-0 text-body text-break\">\n                        { filesize(props.size) }\n                    </small> \n                    <small className=\"mx-md-2 mx-0 text-secondary text-break\">\n                        <TimeAgo date={props.uploaded} formatter={formatter} />\n                    </small> \n                    <small className=\"mr-md-2 mx-0 text-secondary text-break\">\n                        {props.user}\n                    </small>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default function File(props) {\n    let file;\n    if (props.queued)\n        file = FileQueued(props);\n    else if (props.uploading)\n        file = FileUploading(props);\n    else if (props.error)\n        file = FileError(props);\n    else\n        file = FileNormal(props);\n    return (\n    <div key={props.index} className=\"list-group-item p-1\">\n        {file}\n    </div>);\n}\n","function Seconds(x) {\n    const last_digit = x %  10;\n\n    // 11,12,13,14 - исключения\n    if ( x>10 && x < 15 )\n        return x + ' секунд';\n\n    switch(last_digit){\n        case 1:\n            return x + ' секунда';\n        case 2:\n        case 3:\n        case 4:\n            return x + ' секунды';\n        default:\n            return x + ' секунд';\n    }\n}\n\nfunction Minutes(x) {\n    const last_digit = x %  10;\n\n    // 11,12,13,14 - исключения\n    if ( x>10 && x < 15 )\n        return x + ' минут';\n\n    switch(last_digit){\n        case 1:\n            return x + ' минута';\n        case 2:\n        case 3:\n        case 4:\n            return x + ' минуты';\n        default:\n            return x + ' минут';\n    }\n}\n\nexport default function TimeLeft(mseq) {\n    const fsecs  = mseq / 1000;\n    const fhours = fsecs / 3600;\n    const fmins  = fsecs / 60;\n    \n    const hours  = Math.floor(fhours);\n    const mins   = Math.floor(fmins) % 60;\n    const secs   = Math.floor(fsecs) % 60;\n\n    if (fhours >= 5)\n        return (hours + \" часов\"); // следующий падеж - 21 час, не поддерживаем пока\n    else if (fhours >= 2)\n        return (hours + \" часа \" + Minutes(mins));\n    else if (fhours >= 1)\n        return (\"1 час \" + Minutes(mins));\n    else if (mins >= 3)\n        return Minutes(mins);\n    else if (mins >= 1)\n        return (Minutes(mins) + ' ' + Seconds(secs));\n    else\n        return (Seconds(secs));\n\n}\n\n/*\nfunction test (h,m,s,ms){\n    let output = h+':'+m+':'+s+'('+ms+') ' \n        + TimeLeft(ms+1000*(s+60*(m+60*h)));\n    console.log(output);\n}\n\ntest(10,45,5,123);\ntest(4,45,5,123);\ntest(3,45,5,123);\ntest(2,45,5,123);\ntest(1,45,5,123);\ntest(0,45,5,123);\ntest(0,43,5,123);\ntest(0,41,5,123);\ntest(0,11,5,123);\ntest(0,3,0,123);\ntest(0,2,1,123);\ntest(0,2,2,123);\ntest(0,2,3,123);\ntest(0,2,5,123);\ntest(0,1,5,123);\ntest(0,0,5,123);\ntest(0,0,3,123);\ntest(0,0,1,123);\ntest(0,0,0,0);\n*/\n\n","import React      from 'react';\nimport filesize   from 'filesize';\n\nimport TimeLeft   from './TimeLeft';\n\n\nexport default function FolderStats(props) {\n    let progress = props.stats.uploaded_so_far;\n\n    // прогресс с учетом файлов, которые еще загружаются\n    for (let i in props.stats.files) {\n        const f = props.stats.files[i];\n        if (f.uploading) {\n            progress += f.size * f.progress / 100;\n        }\n    }\n\n    let percentage = 0, elapsed = 0, time_left = 0;\n    if (props.stats.uploading_now) {\n        // оставшийся процент\n        percentage = (100 * (props.stats.total_to_upload - progress) / props.stats.total_to_upload).toFixed(1);\n        // оставшееся время (в миллисекундах)\n        elapsed = (new Date()).getTime() - props.stats.upload_started.getTime();\n        time_left = elapsed / progress * (props.stats.total_to_upload - progress + 1);\n    }\n\n    return (<div className=\"d-flex flex-wrap w-100 justify-content-left my-2\">\n        <a href=\"/#\" className=\"mr-3 flex-grow-1\">\n            { props.stats.files.length > 0 &&  <small> Скачать все » </small> }\n        </a>\n        <div className=\"mx-1 text-body\">\n            {props.stats.uploading_now ?\n                <small>\n                    <span className=\"text-secondary\"> Загружаем </span>\n                    {filesize(props.stats.total_to_upload)}\n                    <span className=\"text-secondary\">, осталось </span>\n                    {percentage + '%, '}\n                    {TimeLeft(time_left)}\n                </small> :\n                <small>\n                    {props.stats.files.length}\n                    <span className=\"text-secondary\"> файла(ов), </span>\n                    {filesize(props.stats.total_uploaded)}\n                </small>}\n        </div>\n    </div>);\n}\n","import React     from 'react';\nimport { Link }  from \"react-router-dom\";\n\nexport default function Breadcrumbs(props) {\n    return (<nav aria-label=\"breadcrumb\">\n        <ol className=\"breadcrumb mb-2\">\n            <li className=\"breadcrumb-item\"><Link to=\"/\">Все проекты</Link></li>\n            { props.parent_id !== undefined &&\n                <li className=\"breadcrumb-item\"><Link to={\"/project/\" + props.parent_id}>{props.parent_name}</Link></li>\n            }\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">{props.name}</li>\n        </ol>\n    </nav>);\n}\n","import React, { Component } from 'react';\nimport { Redirect }         from \"react-router-dom\";\nimport Navbar               from './Navbar';\nimport FileDropzone         from './FileDropzone';\nimport File                 from './File';\nimport API                  from './server_api'\nimport FolderStats          from './FolderStats';\nimport Breadcrumbs          from './Breadcrumbs';\nimport { isAuthenticated }  from './Login'\n\n\n\nexport default class Folder extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:            null,\n            parent_id:       null,\n            files:           [],\n            uploading_now:   false,\n            upload_started:  null,\n            uploaded_so_far: 0,\n            total_to_upload: 0,\n            total_uploaded:  0,\n         };\n\n        this.onFilesAdded     = this.onFilesAdded.bind(this);\n        this.onCancelFile     = this.onCancelFile.bind(this);\n        this.onFileUpoaded    = this.onFileUpoaded.bind(this);\n        this.onUploadProgress = this.onUploadProgress.bind(this);\n        this.onUploadError    = this.onUploadError.bind(this);\n        this.onFileListLoaded = this.onFileListLoaded.bind(this);\n    }\n\n    componentWillMount() {\n        if ( isAuthenticated() )\n            API.getFolder( this.onFileListLoaded, this.props.match.params.id );\n    }\n\n    onFileListLoaded(json){\n        let size=0;\n        for (let i in json.files)\n            size += json.files[i].size;\n        this.setState({\n            name:        json.name,\n            parent_id:   json.parent_id,\n            parent_name: json.parent_name,\n            files:       json.files,\n            total_uploaded: size,\n        });\n    }\n\n    onFilesAdded(files){\n        const new_files=[];\n        let added_size=0;\n        // Добавляем новые файлы в очередь на закачку\n        for (let i in files) {\n            // не позволяем заливать дубликаты\n            let duplicate = false;\n            for (let j in this.state.files){\n                if ( this.state.files[j].error !== true &&  this.state.files[j].name === files[i].name ) {\n                    duplicate = true;\n                    new_files.push({ name: files[i].name, error: true, error_text: \"Файл с таким именем уже есть в этой папке.\" });\n                    break;\n                }\n            }\n            // ставим в очередь на закачку\n            if ( duplicate === false ){\n                const file = { \n                    name: files[i].name,\n                    size: files[i].size,\n                    file: files[i],\n                    queued: true, \n                };\n                new_files.push(file);\n                added_size += files[i].size;\n            }\n        }\n        // асинхронно добавляем их к состоянию\n        this.setState( old_state => ({\n            files: old_state.files.concat(new_files),\n            total_to_upload: old_state.total_to_upload+added_size,\n        }));\n        // запускаем закачку следующих по очереди\n        this.rollQueue();\n    }\n\n    rollQueue(){\n        // делаем обновление асинхронно\n        if ( isAuthenticated() ) // нужно регулярно вызывать этот метод, чтобы обнолять устаревающие токены\n            this.setState( old_state => {\n\n            const files = old_state.files;\n            // считаем количество текущих закачек\n            let uploads = 0;\n            for (let i in files)\n                if ( files[i].uploading )\n                    uploads++;\n\n            // запускаем новые, если нужно\n            while (uploads < 3){\n                // ищем следующую в очереди\n                let next = null;\n                for(let i in files){\n                    if ( files[i].queued ){\n                        next = i;\n                        break;\n                    }\n                }\n\n                // выходим, если очередь закончилась\n                if (next === null)\n                    break;\n\n                // запускаем реальную загрузку\n                const ref = API.uploadFile(this.props.match.params.id, files[next].file, this.onUploadProgress, this.onFileUpoaded, this.onUploadError);\n\n                // добавляем в табличку новую загрузку\n                files[next] = { \n                    name: files[next].name,\n                    size: files[next].size,\n                    uploading: true, \n                    progress: 0,\n                    ref,\n                };\n                uploads++;\n            }\n            \n            // если это самое начало - инициализируем статистику\n            if ( (!old_state.uploading_now) && uploads > 0 ){\n                // считаем полный объем данных для закачки\n                let to_upload = 0;\n                for (let i in files)\n                    if ( files[i].uploading || files[i].queued )\n                        to_upload += files[i].size;\n\n                // обвноляем состояние и статистику\n                return { \n                    files: files,\n                    uploading_now: true,\n                    upload_started: new Date(),\n                    total_to_upload: to_upload,\n                    uploaded_so_far: 0\n                };\n            }\n\n            // просто обновляем состояние\n            return { \n                files: files,\n                uploading_now: (uploads > 0),\n            };\n        });\n    }\n\n    onCancelFile(event){\n        event.preventDefault();\n        const index = event.target.id;\n        // обрываем закачку\n        if ( this.state.files[index].uploading )\n            this.state.files[index].ref.abort();\n        // асинхронно удаляем из состояния\n        this.setState( old_state =>{\n            const new_files = old_state.files;\n            const size = new_files[index].size;\n            new_files.splice(index, 1);\n            return { \n                files: new_files,\n                total_to_upload: old_state.total_to_upload - size,\n            };\n        });\n        // запускаем закачку следующих по очереди\n        this.rollQueue();\n    }\n\n    // Обновляем состояние при окончании загрузки файла\n    onFileUpoaded(name, json){\n        this.setState( old_state => {\n            const copy = old_state.files;\n            let size=0;\n            for (let i in copy){\n                const file =  copy[i];\n                if ( file.uploading && file.name === name ){\n                    if ( json.error !== undefined ){\n                        copy[i] = { name, error: true, error_text: json.error };\n                    }\n                    else {\n                        copy[i] = json; \n                    }\n                    size += file.size;\n                    break;\n                }\n            }\n            return ({ \n                files:           copy,\n                uploaded_so_far: old_state.uploaded_so_far+size,\n                total_uploaded:  old_state.total_uploaded+size,\n            });\n        });\n        // запускаем закачку следующих по очереди\n        this.rollQueue();\n    }\n\n    // Обновляем прогресс загрузки файла\n    onUploadProgress(name, progress){\n        this.setState( old_state => {\n            const copy = old_state.files;\n            for (let i in copy){\n                const file =  copy[i];\n                if ( file.uploading && file.name === name )\n                    copy[i].progress = progress;\n            }\n            return ( { files: copy });\n        });\n    }\n\n    // Ошибка загрузки,обновляем статус\n    onUploadError(name, text){\n        this.setState( old_state => {\n            const copy = old_state.files;\n            for (let i in copy){\n                const file =  copy[i];\n                if ( file.uploading && file.name === name )\n                    copy[i] =  { name, error: true, error_text: text }\n            }\n            return ( { files: copy });\n        });\n    }\n\n    render () {\n        // неавторизованных пользователей перенаправляем на страницу логина\n        if ( !isAuthenticated() )\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\n\n        // готовим массив файлов - оснащаем коллбеками\n        const files = [];\n        for(let i in this.state.files ){\n            let file = this.state.files[i];\n            file.index = i;\n            file.callback = this.onCancelFile;\n            files.push(File(file));\n        }\n\n        return ([\n            <Navbar key='navbar' />,\n            <Breadcrumbs key='breadcrumbs' \n                parent_id = {this.state.parent_id}\n                parent_name = {this.state.parent_name}\n                name = {this.state.name}/>,\n            <main key='body' role=\"main\" className=\"container\">\n                <FolderStats stats={this.state}/>\n                <FileDropzone onFilesAdded={this.onFilesAdded}>\n                    <div className=\"list-group shadow\">\n                        {files}\n                    </div>\n                </FileDropzone>\n            </main>\n        ]);\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect }         from \"react-router-dom\";\nimport Navbar               from './Navbar';\nimport { isAuthenticated }  from './Login'\nimport Avatar               from './Avatar';\nimport API                  from './server_api'\nimport { getMe, updateMe }  from './Login';\n\n\nfunction UserDescription (props) {\n    const p = props.state;\n    const editing = p.editing;\n\n    // красивый список проектов пользователя\n    let projs = [];\n    if (p.project_names !== undefined){\n        for (let i in p.project_names){\n            projs.push(<strong key={i}>{p.project_names[i]}</strong>);\n            if ( i < p.project_names.length-1 )\n                projs.push(', ');\n        }\n    }\n\n    return (\n        <div className=\"border border-light shadow-lg rounded-lg bg-white mt-4 p-4\">\n            <div className='d-flex'>\n                { p.is_loaded && <Avatar email={p.email} size='120' className='pr-4' /> }\n                <div className='flex-fill'>\n                    { editing !== 'name' &&\n                        <span className='d-flex justify-content-between'>\n                            <h1 className=\"display-4 text-break\">{p.name}</h1>\n                            <button className='close' disabled={ p.is_deleting || !p.is_loaded }>\n                                <img src='img/edit.svg' \n                                    className='align-self-start mt-0 ml-sm-5' \n                                    onClick={ p.is_deleting ? ()=>{} : props.clb.onEditNameButton } \n                                    alt='edit'/>\n                            </button>\n                        </span>\n                    }\n                    { editing === 'name' && \n                        <form className=\"form-inline mb-4\" onSubmit={ props.clb.onNameChangeButton } autoComplete=\"off\">\n                            <div className=\"form-group flex-grow-1\">\n                                <input type=\"text\" \n                                    className=\"form-control w-100 mr-2\"\n                                    id=\"nameEdit\" \n                                    maxLength='50'\n                                    autoFocus={true} \n                                    onChange={props.clb.handleInputChange}\n                                    value={ p.nameEdit }/>\n                            </div>\n                            <div>\n                                <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.clb.onCancelButton }>Отмена</button>\n                                <button type=\"submit\" className=\"btn btn-primary\">Изменить</button>\n                            </div>\n                        </form>\n                    }\n                    <span className='d-flex justify-content-between'>\n                        <p className=\"lead text-break\">{p.email}</p>\n                    </span>\n                </div>\n            </div>\n            <hr className=\"my-4\"/>\n            { p.is_loaded && p.is_admin &&\n                <div>\n                    <p>Администратор сервиса. Имеет доступ к:</p>\n                    <ul>\n                        <li>Созданию и удаление проектов</li>\n                        <li>Добавлению и удаление внешних пользователей</li>\n                        <li>Управлению доступом внешних пользователей к проектам</li>\n                        <li>Созданию новых папок в проектах</li>\n                        <li>Скачиванию файлов из папок проекта</li>\n                        <li>Загрузке новых вайлов в папки</li>\n                    </ul>\n                </div>\n            }\n            { p.is_loaded && !p.is_admin &&\n                <div>\n                    <p>Пользователь сервиса. Имеет доступ к:</p>\n                    <ul>\n                        <li>Созданию новых папок в проектах</li>\n                        <li>Скачиванию файлов из папок проекта</li>\n                        <li>Загрузке новых вайлов в папки</li>\n                    </ul>\n                    <p>Является участником следующих проектов: {projs}.</p>\n                </div>\n            }\n            { !p.is_loaded || !getMe().is_admin || getMe().id === p.id ||\n                <button className=\"btn btn-danger btn-lg mt-3\" \n                disabled={ p.is_deleting } \n                onClick={ props.clb.onDeleteUser } >\n                    Удалить пользователя\n                </button>\n            }\n        </div>\n    );\n}\n\n\nexport default class User extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_loaded:   false,\n            editing:     'none',\n            name:        '',\n            email:       '',\n            is_deleting:  false,     // отослан запрос на удаление пользователя\n            is_deleted:   false,     // пришел ответ, что пользователь удален\n            me:           getMe(),\n        };\n\n        // способ отслеживания изменения URI и загрузи правильных данных\n        this.cached_id = this.props.match.params.id;\n\n        this.handleInputChange     = this.handleInputChange.bind(this);\n        this.onEditNameButton      = this.onEditNameButton.bind(this);\n        this.onNameChangeButton    = this.onNameChangeButton.bind(this);\n        this.onCancelButton        = this.onCancelButton.bind(this);\n        this.onDeleteUser          = this.onDeleteUser.bind(this);\n    }\n\n    loadUserInfo(){\n        // загружаем информацию о пользователе\n        API.getUser( (json)=>{ \n            json.is_loaded = true; // информация наконец загружена\n            this.setState( json ); \n        }, this.props.match.params.id );\n    }\n\n    componentWillMount() {\n        if ( isAuthenticated() )\n            this.loadUserInfo();\n    }\n\n    componentDidUpdate(){\n        // отслеживаем изменение ссылки, чтобы перезагрузить информацию о пользователе\n        if ( this.cached_id !== this.props.match.params.id ){\n            this.cached_id = this.props.match.params.id;\n            this.setState({ is_loaded: false })\n            this.loadUserInfo();\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        this.setState({ [target.id]: target.value });\n    }\n\n    onEditNameButton (event) {\n        this.setState( { editing: 'name', nameEdit: this.state.name });\n    }\n\n    onNameChangeButton (event) {\n        this.setState({ editing: 'none' });\n        API.updateUserName( ()=>{ \n            // если редактируем себя - обновляем\n            if ( getMe().id === this.props.match.params.id ) {\n                let json = getMe();\n                json.name = this.state.nameEdit;\n                updateMe(json);\n            }\n            this.setState({name: this.state.nameEdit, me: getMe()}); \n        }, this.props.match.params.id, this.state.nameEdit );\n        event.preventDefault();\n    }\n\n    onCancelButton (event) {\n        this.setState( { editing: 'none' });\n    }\n\n    onDeleteUser (event) {\n        this.setState( { editing: 'none', is_deleting: true });\n        API.deleteUser(()=>{ this.setState( { is_deleted: true }); }, this.props.match.params.id);\n        event.preventDefault();\n    }\n\n    render () {\n        // неавторизованных пользователей перенаправляем на страницу логина\n        if ( !isAuthenticated() )\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\n\n        // после удаление проекта переходим к списку проектов снова\n        if ( this.state.is_deleted )\n            return (<Redirect to='/' />);\n        \n        return ([\n            <Navbar key='navbar' me={this.state.me} />,\n            <main key='body' role=\"main\" className=\"container\">\n                <UserDescription state= {this.state} clb={this} />\n            </main>\n        ]);\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect }         from \"react-router-dom\";\nimport Navbar               from './Navbar';\nimport { isAuthenticated }  from './Login'\nimport API                  from './server_api'\n\n\nexport default class NewProject extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name:           '',\n            description:    '',\n            processing:     false,  // уже отправили запрос на сервер\n            processed:      false,  // уже получили ответ сервере\n            id:             '',     // id нового проекта\n        };\n\n        this.handleInputChange     = this.handleInputChange.bind(this);\n        this.onCreate              = this.onCreate.bind(this);\n        this.onCreated             = this.onCreated.bind(this);\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        this.setState({ [target.id]: target.value });\n    }\n\n    onCreate(event){\n        API.addProject(this.onCreated, this.state.name, this.state.description );\n        this.setState({ processing: true });\n        event.preventDefault();\n    }\n\n    onCreated(json) {\n        this.setState({ processed: true, id: json.id });\n    }\n\n    render() {\n        // неавторизованных пользователей перенаправляем на страницу логина\n        if ( !isAuthenticated() )\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\n\n        // после получения ответа от сервера отправляем на сраницу настроек нового проекта\n        if ( this.state.processed )\n            return (<Redirect to={ '/project/'+this.state.id } />);\n\n        return ([\n            <Navbar key='navbar' />,\n            <main key='body' role=\"main\" className=\"container\">\n                <form onSubmit={this.onCreate} autoComplete=\"off\">\n                    <fieldset disabled={this.state.processing}>\n                        <h2 className='mt-3'>Создать новый проект</h2>\n                        <div className=\"form-group\">\n                            <input type=\"text\" \n                                className=\"form-control\"\n                                id=\"name\" \n                                placeholder=\"Введите название\" \n                                onChange={this.handleInputChange}\n                                value={this.state.name}\n                                required />\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control\"\n                                id=\"description\" \n                                rows=\"3\" \n                                placeholder=\"Описание проекта (не обязательно)\" \n                                onChange={this.handleInputChange}\n                                value={this.state.description} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Создать</button>\n                    </fieldset>\n                </form>\n            </main>\n        ]);\n    }\n}\n","import React, { Component } from 'react';\nimport { Redirect, Link }   from \"react-router-dom\";\nimport Navbar               from './Navbar';\nimport { isAuthenticated }  from './Login'\nimport Breadcrumbs          from './Breadcrumbs';\nimport Avatar               from './Avatar';\nimport API                  from './server_api'\nimport { getMe }            from './Login';\n\nimport TimeAgo              from 'react-timeago';\nimport ruStrings            from 'react-timeago/lib/language-strings/ru'\nimport buildFormatter       from 'react-timeago/lib/formatters/buildFormatter'\n\nimport './Project.css'\n\nconst formatter = buildFormatter(ruStrings);\n\nfunction emailIsValid (email) {\n    if (email === undefined)\n        return false;\n    const e = email.trim();\n    const regexp = /\\S+@\\S+\\.((?:com)|(?:ru))/;\n    const m = e.match(regexp);\n    //  есть совпадение и оно полное\n    return ( m !== null && m[0] === e );\n}\n\nfunction User (props) {\n    const icon = (props.icon==='add') ? 'img/add-user.svg' : 'img/delete-user.svg';\n    const animated = props.animated ? \"user-animated\" : \"\";\n    return (\n        <li className={\"list-group-item d-flex align-items-center \"+ animated} >\n            <Avatar email={props.user.email} size='80' />\n            <div className='flex-grow-1 text-break ml-3'>\n                <Link to={'/user/' + props.user.id} className='text-dark'>\n                    <h5>{props.user.name}</h5>\n                    <span>{props.user.email}</span>\n                </Link>\n            </div>\n            <button className='close' id={props.user.id} onClick={props.func}>\n                <img src={icon} id={props.user.id} height=\"50px\" className='ml-2' alt='move user'/>\n            </button>\n        </li>\n    );\n}\n\nfunction NewUser (props) {\n    const editing = props.state.editing;\n    // валидируем введенный емейл\n    const email_valid = emailIsValid(props.state.user_email);\n    return (\n        <li className=\"list-group-item d-flex align-items-center justify-content-center\">\n            { editing === 'user' ||\n                <button className='close'>\n                    <img src='img/add-new-user.svg' \n                    onClick={ props.onNewUserButton } \n                    height=\"50px\"\n                    alt='edit'/>\n                </button>\n            }\n            { editing === 'user' &&\n                <form className=\"form-inline\" onSubmit={ props.onCreateUserButton } autoComplete=\"off\">\n                    <div className=\"form-row w-100\">\n                        <div className=\"input-group mb-2 col-sm-6\">\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                id=\"user_name\" \n                                placeholder=\"Имя\" \n                                maxLength='50'\n                                onChange={props.handleInputChange}\n                                value={props.state.user_name}\n                                required/>\n                        </div>\n                        <div className=\"input-group mb-2 col-sm-6\">\n                            <div className=\"input-group-prepend\">\n                                <div className=\"input-group-text\">@</div>\n                            </div>\n                            <input type=\"email\" \n                                className={\"form-control \" + (email_valid ? \"is-valid\" :\"is-invalid\")}\n                                id=\"user_email\" \n                                placeholder=\"Email\"\n                                maxLength='50'\n                                onChange={props.handleInputChange}\n                                value={props.state.user_email}\n                                required />\n                        </div>\n                    </div>\n                    <div className=\"form-row px-1\">\n                        <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.onCancelButton }>Отмена</button>\n                        <button type=\"submit\" className={\"btn btn-primary\" + ( email_valid?\"\":\" disabled\")}>\n                            Создать\n                        </button>\n                    </div>\n                </form>\n            }\n        </li>\n    )\n}\n\nfunction ProjectDescription (props) {\n    const editing = props.state.editing;\n    return (\n        <div className=\"border border-light shadow-lg rounded-lg bg-white mt-4 p-4\">\n            { editing !== 'name' &&\n                <span className='d-flex justify-content-between'>\n                    <h1 className=\"display-4 text-break\">{props.state.name}</h1>\n                    { !getMe().is_admin ||  props.state.folders_num > 0 ||\n                        <button className='close' disabled={ props.state.is_deleting || !props.state.is_loaded }>\n                            <img src='img/edit.svg' \n                                className='align-self-start mt-4 ml-3' \n                                onClick={ props.state.is_deleting ? ()=>{} : props.clb.onEditNameButton } \n                                alt='edit'/>\n                        </button>\n                    }\n                </span>\n            }\n            { editing === 'name' && \n                <form className=\"form-inline mb-4\" onSubmit={ props.clb.onNameChangeButton } autoComplete=\"off\">\n                    <div className=\"form-group flex-grow-1\">\n                        <input type=\"text\" \n                            className=\"form-control w-100 mr-2\" \n                            id=\"nameEdit\" \n                            autoFocus={true} \n                            onChange={props.clb.handleInputChange}\n                            value={ props.state.nameEdit }/>\n                    </div>\n                    <div>\n                        <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.clb.onCancelButton }>Отмена</button>\n                        <button type=\"submit\" className=\"btn btn-primary\">Изменить</button>\n                    </div>\n                </form>\n            }\n            { editing !== 'description' &&                    \n                <span className='d-flex justify-content-between'>\n                    <p className=\"lead text-break\">{props.state.description}</p>\n                    { !getMe().is_admin ||\n                        <button className='close' disabled={ props.state.is_deleting || !props.state.is_loaded }>\n                            <img src='img/edit.svg' \n                                className='align-self-start mt-3 ml-3' \n                                onClick={ props.state.is_deleting ? ()=>{} : props.clb.onEditDescButton }  \n                                alt='edit'/>\n                        </button>\n                    }\n                </span>\n            }\n            { editing === 'description' && \n                <form className=\"form form mb-4\" onSubmit={ props.clb.onDescChangeButton } autoComplete=\"off\">\n                    <div className=\"form-group flex-grow-1 mr-sm-4\">\n                        <textarea className=\"form-control w-100\" \n                            id=\"descEdit\"\n                            rows=\"5\"\n                            autoFocus={true} \n                            onChange={props.clb.handleInputChange}\n                            value={props.state.descEdit}/>\n                    </div>\n                    <div>\n                        <button type=\"reset\" className=\"btn btn-secondary mr-2\" onClick={ props.clb.onCancelButton }>Отмена</button>\n                        <button type=\"submit\" className=\"btn btn-primary\">Изменить</button>\n                    </div>\n                </form>\n            }                    \n            <hr className=\"my-4\"/>\n            { !props.state.is_loaded ||\n                <p>Создан <strong><TimeAgo date={props.state.created} formatter={formatter}/></strong><br />\n                Содержит <strong>{props.state.folders_num} папки</strong>, <strong>{props.state.files_num} файла(ов)</strong>.</p>\n            }\n            { props.state.folders_num > 0 || !props.state.is_loaded || !getMe().is_admin ||\n                <button className=\"btn btn-danger btn-lg\" \n                disabled={ props.state.is_deleting } \n                onClick={ props.clb.onDeleteProject } >\n                    Удалить проект\n                </button>\n            }\n        </div>\n    );\n}\n\n\n\nexport default class Project extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            is_loaded:   false,\n            editing:     'none',\n            name:        '',\n            description: '',\n            participants: new Set(), // id's of selected users\n            users:        [],        // все пользователи сервиса\n            moved_user:   '',        // id перемещенного пользвателся (для анимации)\n            is_deleting:  false,     // отослан запрос на удаление проекта\n            is_deleted:   false,     // пришел ответ, что проект удален\n        };\n\n        this.handleInputChange     = this.handleInputChange.bind(this);\n        this.onEditNameButton      = this.onEditNameButton.bind(this);\n        this.onNameChangeButton    = this.onNameChangeButton.bind(this);\n        this.onEditDescButton      = this.onEditDescButton.bind(this);\n        this.onDescChangeButton    = this.onDescChangeButton.bind(this);\n        this.onCancelButton        = this.onCancelButton.bind(this);\n        this.onAddUser             = this.onAddUser.bind(this);\n        this.onDeleteUser          = this.onDeleteUser.bind(this);\n        this.onNewUserButton       = this.onNewUserButton.bind(this);\n        this.onCreateUserButton    = this.onCreateUserButton.bind(this);\n        this.onProjectLoaded       = this.onProjectLoaded.bind(this);\n        this.onUserCreated         = this.onUserCreated.bind(this);\n        this.onDeleteProject       = this.onDeleteProject.bind(this);\n    }\n\n    onProjectLoaded(json) {\n        let newstate = json;\n        if ( 'users' in json ){\n            newstate.participants = new Set(json.users);\n            delete newstate.users;\n        }\n        newstate.is_loaded = true; // информация наконец загружена\n        this.setState( newstate );\n    }\n\n    componentWillMount() {\n        if ( isAuthenticated() ){\n            API.getProject( this.onProjectLoaded, this.props.match.params.id );\n            if ( getMe().is_admin )\n                API.getUsersList( (json) => { this.setState( { users: json }); } );\n        }\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        this.setState({ [target.id]: target.value });\n    }\n\n    onEditNameButton (event) {\n        this.setState( { editing: 'name', nameEdit: this.state.name });\n    }\n\n    onNameChangeButton (event) {\n        API.updateProject(this.onProjectLoaded, this.props.match.params.id, this.state.nameEdit, this.state.description );\n        this.setState( { editing: 'none' });\n        event.preventDefault();\n    }\n\n    onEditDescButton (event) {\n        this.setState( { editing: 'description', descEdit: this.state.description });\n    }\n\n    onDescChangeButton (event) {\n        API.updateProject(this.onProjectLoaded, this.props.match.params.id, this.state.name, this.state.descEdit );\n        this.setState( { editing: 'none' });\n        event.preventDefault();\n    }\n\n    onNewUserButton (event) {\n        this.setState( { editing: 'user', user_name: '', user_email: '' });\n    }\n\n    onCancelButton (event) {\n        this.setState( { editing: 'none' });\n    }\n\n    onAddUser (event) {\n        let sel = this.state.participants;\n        sel.add(event.target.id);\n        API.updateUserProjects(()=>{}, event.target.id, this.props.match.params.id, 'add');\n        this.setState( { editing: 'none', participants: sel, moved_user: event.target.id });\n        event.preventDefault();\n    }\n\n    onDeleteUser (event) {\n        let sel = this.state.participants;\n        sel.delete(event.target.id);\n        API.updateUserProjects(()=>{}, event.target.id, this.props.match.params.id, 'delete');\n        this.setState( { editing: 'none', participants: sel, moved_user: event.target.id });\n        event.preventDefault();\n    }\n\n    onUserCreated (json) {\n        let new_users = this.state.users;\n        let sel = this.state.participants;\n\n        new_users.push(json);\n        sel.add(json.id);\n\n        this.setState( { \n            participants: sel,\n            users: new_users,\n            moved_user: json.id,\n            editing: 'none',\n        });\n    }\n\n    onCreateUserButton (event) {\n        API.addUser(this.onUserCreated, this.state.user_name,  this.state.user_email.trim(), this.props.match.params.id );\n        this.setState( { editing: 'none', });\n        event.preventDefault();\n    }\n\n    onDeleteProject (event) {\n        API.deleteProject(()=>{ this.setState( { is_deleted: true }); }, this.props.match.params.id);\n        this.setState( { editing: 'none', is_deleting: true });\n        event.preventDefault();\n    }\n\n    render () {\n        // неавторизованных пользователей перенаправляем на страницу логина\n        if ( !isAuthenticated() )\n            return (<Redirect to={{ pathname: \"/login\", state: { from: this.props.location }}} />);\n\n        // после удаление проекта переходим к списку проектов снова\n        if ( this.state.is_deleted )\n            return (<Redirect to='/' />);\n\n\n        // составляем два списка пользователей\n        let participants = [];\n        let others = [];\n\n        for (let i in this.state.users){\n            const p = this.state.users[i];\n            const animated = (p.id === this.state.moved_user);\n\n            if ( p.is_admin ) {\n                // игнорируем, у админов есть доступ везде\n            }\n            else if (this.state.participants.has(this.state.users[i].id))\n                participants.push(<User icon='delete' user={p} key={p.id} func={this.onDeleteUser} animated={animated}/>);\n            else\n                others.push(<User icon='add' user={p} key={p.id} func={this.onAddUser} animated={animated}/>);\n        }\n        \n        return ([\n            <Navbar key='navbar' />,\n            <Breadcrumbs key='breadcrumbs' name = {this.state.name}/>,            \n            <main key='body' role=\"main\" className=\"container\">\n                <ProjectDescription state= {this.state} clb={this} />\n                { !this.state.is_loaded || this.state.is_deleting || !getMe().is_admin ||\n                    <div className='d-flex flex-column flex-lg-row'>\n                        <div className='flex-fill my-4 mr-lg-4'>\n                            <h2 className='ml-3'>Участники проекта:</h2>\n                            <ul className=\"list-group shadow-lg\">\n                                {participants}\n                                <NewUser state={this.state}\n                                    handleInputChange={this.handleInputChange}\n                                    onNewUserButton={this.onNewUserButton}\n                                    onCreateUserButton={this.onCreateUserButton}\n                                    onCancelButton={this.onCancelButton} />\n                            </ul>\n                        </div>\n                        <div className='flex-fill my-4 ml-lg-4'>\n                            <h2 className='ml-3'>Остальные пользователи:</h2>\n                            <ul className=\"list-group shadow-lg\">\n                                {others}\n                            </ul>\n                        </div>\n                    </div>\n                }\n            </main>\n        ]);\n    }\n}\n","import React     from 'react';\nimport ReactDOM  from 'react-dom';\n\nimport App       from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React                              from 'react';\nimport { HashRouter as Router, Route }    from 'react-router-dom';\nimport Projects                           from './ProjectsList'\nimport Folder                             from './Folder';\nimport User                               from './User';\nimport NewProject                         from './NewProject';\nimport Project                            from './Project';\nimport { Login, Logout }                  from './Login'\nimport Alert                              from './Alert';\n\nexport default function App(props){\n    // ну а пока суть да дело - рисуем что можем\n    return (\n        <Router>\n            <div className=\"App\">\n                <Route exact path=\"/\" component={Projects} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/access_token=:hash\" component={Login} />\n                <Route path=\"/logout\" component={Logout} />\n                <Route path=\"/new_project\" component={NewProject} />\n                <Route path=\"/folder/:id\" render={ (props) => <Folder {...props}/> } />\n                <Route path=\"/project/:id\" render={ (props) => <Project {...props}/> } />\n                <Route path=\"/user/:id\" render={ (props) => <User {...props}/> } />\n                <Alert />\n            </div>\n        </Router>\n    );\n}"],"sourceRoot":""}